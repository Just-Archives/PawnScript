29:7:2023 | 14:56:29 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 14:56:29 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:34 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:35 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:56:36 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 14:56:38 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 14:56:39 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 14:56:40 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 14:56:41 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:42 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:43 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:44 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:45 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:46 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:47 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:56:48 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:57:52 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 14:57:52 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 14:57:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:58 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 14:57:59 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:59 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:59 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:59 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 14:57:59 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 14:58:1 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 14:58:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 14:58:3 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 14:58:3 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 14:58:3 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 14:58:3 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 14:58:3 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 14:58:4 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:7 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 15:55:7 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 15:55:11 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:11 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:11 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:12 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:55:14 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 15:55:16 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 15:55:16 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 15:55:16 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 15:55:17 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 15:55:19 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:20 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:21 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:22 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:55:23 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:22 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 15:59:22 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 15:59:26 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:26 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:26 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:27 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:28 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 15:59:29 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 15:59:31 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 15:59:31 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 15:59:31 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 15:59:32 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 15:59:34 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:35 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:36 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:37 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:38 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:39 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:40 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:41 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:42 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:43 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:44 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:45 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:46 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:47 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:48 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:49 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:50 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 15:59:51 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:32 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 16:0:32 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 16:0:36 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:36 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:37 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:38 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:0:39 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 16:0:41 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 16:0:42 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 16:0:43 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 16:0:43 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 16:0:43 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 16:0:43 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 16:0:44 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:45 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:46 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:47 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:48 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:49 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:50 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:51 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:52 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:53 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:54 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:55 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:56 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:57 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:58 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:0:59 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:0 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:1 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:2 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:3 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:4 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:5 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:6 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:7 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:8 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:9 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:10 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:11 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:12 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:13 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:1:14 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:2:25 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 16:2:25 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:30 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:31 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 16:2:32 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 16:2:35 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 16:2:35 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 16:2:35 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 16:2:35 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 16:2:35 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 16:2:36 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 16:2:37 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:2:38 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:2:39 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 16:2:40 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:50:55 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 17:50:55 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 17:50:59 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:50:59 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:50:59 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:50:59 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:50:59 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 17:51:0 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 17:51:1 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 17:51:4 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 17:51:5 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 17:51:6 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:7 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:8 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:9 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:10 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:11 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:12 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:13 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:14 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 17:51:15 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 18:9:37 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 18:9:37 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:42 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 18:9:44 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 18:9:46 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 18:9:47 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 18:9:48 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 18:9:49 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 18:9:50 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:33 @ >> [PawnScript] | LOG: OMG actually works
 29:7:2023 | 19:33:33 @ >> [PawnScript] | LOG: ==========================================
 29:7:2023 | 19:33:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:39 @ >> [PawnScript] | LOG: The inline finally works!
 29:7:2023 | 19:33:40 @ >> [PawnScript] | LOG: Tasks are working ig
 29:7:2023 | 19:33:42 @ >> [PawnScript] | LOG: 100
 29:7:2023 | 19:33:42 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:7:2023 | 19:33:42 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 1
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 3
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 4
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: enum test included
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 5
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: -1
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: 0
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Static works here
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Imported 364
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Imported true
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Imported Hello World
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Imported 0.363999
 29:7:2023 | 19:33:43 @ >> [PawnScript] | LOG: Imported 'D'
 29:7:2023 | 19:33:45 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:46 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:47 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:48 @ >> [PawnScript] | LOG: 2
 29:7:2023 | 19:33:49 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:3:46 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:3:46 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:6:41 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:6:41 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:9:51 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:9:51 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:56 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 13:9:57 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:9:58 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 13:10:1 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 13:10:1 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 13:10:1 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 13:10:2 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 13:10:3 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 13:10:3 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 13:10:3 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 13:10:3 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 13:10:4 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:5 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:6 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:7 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:8 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:9 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:10 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:11 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:12 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:13 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:14 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:10:15 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:41 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:18:41 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:18:46 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:46 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:46 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:46 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:47 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:48 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:18:49 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 13:18:51 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:18:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 13:18:53 @ >> [PawnScript] | LOG: #2 827346 & 364.234008
 31:7:2023 | 13:18:54 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:55 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:56 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:57 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:58 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:18:59 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:0 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:1 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:2 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:3 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:4 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:19:5 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:20:46 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:20:46 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:20:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:51 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:51 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:51 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:52 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:53 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:20:54 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 13:20:56 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:20:57 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 13:20:58 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 13:21:0 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:21:1 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:21:2 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:21:3 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:23:15 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 13:23:15 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 13:23:20 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:20 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:20 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:20 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:21 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 13:23:23 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 13:23:25 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 13:23:26 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 100000
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: 21.763599
 31:7:2023 | 13:23:27 @ >> [PawnScript] | LOG: #1 100000 & 21.763599 & false
 31:7:2023 | 13:23:29 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:23:30 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:23:31 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 13:23:32 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:3 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 16:40:3 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 16:40:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:9 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:10 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 16:40:11 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:11 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:11 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:11 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:40:11 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 16:40:14 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 16:40:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 16:40:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 16:40:15 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 100000
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: 21.763599
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 31:7:2023 | 16:40:16 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 31:7:2023 | 16:40:18 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:19 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:20 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:21 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:22 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:40:23 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:33 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 16:46:33 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 16:46:40 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 16:46:43 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 16:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 100000
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: 21.763599
 31:7:2023 | 16:46:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 31:7:2023 | 16:46:46 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 31:7:2023 | 16:46:47 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:48 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:49 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:50 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 16:46:51 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:32 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:10:32 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:10:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:10:39 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:40 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:10:40 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 22:10:43 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 22:10:43 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 22:10:43 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 22:10:44 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 100000
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 21.763599
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: Updated the addressoftest variable!
 31:7:2023 | 22:10:45 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 22:10:47 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:48 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:49 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:50 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:51 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:52 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:10:53 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:15 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:13:15 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:13:20 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:20 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:20 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:21 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:13:22 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:23 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:23 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:23 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:13:23 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 22:13:26 @ >> [PawnScript] | LOG: 100
 31:7:2023 | 22:13:26 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 31:7:2023 | 22:13:26 @ >> [PawnScript] | LOG: Printed: Method test #2
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 1
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 3
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 4
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: enum test included
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 5
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: -1
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Static works here
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Imported 364
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Imported true
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Imported Hello World
 31:7:2023 | 22:13:27 @ >> [PawnScript] | LOG: Imported 0.363999
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: Imported 'D'
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 827346
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 364.234008
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 9376216
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 314.159271
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 100000
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 21.763599
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: Updated the addressoftest variable!
 31:7:2023 | 22:13:28 @ >> [PawnScript] | LOG: 0
 31:7:2023 | 22:13:30 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:31 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:32 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:33 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:34 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:13:35 @ >> [PawnScript] | LOG: 2
 31:7:2023 | 22:24:29 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:24:29 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:24:33 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:33 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:33 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:33 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:33 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:24:34 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:24:35 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 22:28:59 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:28:59 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:29:3 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:3 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:3 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:3 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:29:4 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:29:5 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 22:33:30 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:33:30 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:33:38 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:38 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:39 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:39 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:39 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:40 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:40 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:40 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:41 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:41 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:33:41 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:33:42 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:43 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:43 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:43 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:33:43 @ >> [PawnScript] | LOG: Tasks are working ig
 31:7:2023 | 22:36:0 @ >> [PawnScript] | LOG: OMG actually works
 31:7:2023 | 22:36:0 @ >> [PawnScript] | LOG: ==========================================
 31:7:2023 | 22:36:9 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:9 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:9 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:10 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:10 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:10 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:10 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:11 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:11 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:11 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 31:7:2023 | 22:36:12 @ >> [PawnScript] | LOG: This is still runnin right? 11
 31:7:2023 | 22:36:12 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:12 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:12 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:13 @ >> [PawnScript] | LOG: The inline finally works!
 31:7:2023 | 22:36:14 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 11:44:14 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 11:44:14 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 11:44:24 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:25 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:25 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:26 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:26 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:26 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:27 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:27 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:27 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:28 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 11:44:28 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 11:44:28 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:29 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:29 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:29 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:29 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 11:44:30 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:30 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:30 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:30 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 11:44:30 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 11:44:36 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 11:44:37 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 11:44:38 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 11:44:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 11:44:40 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 11:44:40 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 11:44:40 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 11:44:40 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 11:44:40 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 11:44:41 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 11:44:42 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 11:44:43 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 11:44:44 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 11:44:45 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 11:44:46 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 11:44:47 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:4:17 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 12:4:17 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 12:4:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:4:23 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:4:23 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:4:23 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:51 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 12:7:51 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 12:7:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:56 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:57 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:7:59 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 12:8:1 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 12:8:2 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 12:8:3 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 12:8:4 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 12:13:9 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 12:13:9 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:14 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 12:13:15 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:13:16 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 12:13:19 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:13:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 12:13:21 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 12:13:22 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 12:13:22 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 12:13:22 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 12:13:23 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:13:24 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:13:25 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:13:26 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:13:27 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:39:57 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 12:39:57 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:2 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 12:40:3 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:40:4 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 12:40:7 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:40:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 12:40:9 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 12:40:10 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 12:40:10 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 12:40:10 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 12:40:11 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:40:12 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:40:13 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:40:14 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:27 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 12:43:27 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 12:43:32 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:32 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:32 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:33 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 12:43:34 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:35 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:35 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:35 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 12:43:35 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 12:43:38 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 12:43:38 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 12:43:38 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 12:43:39 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: true
 1:8:2023 | 12:43:40 @ >> [PawnScript] | LOG: "#emit works!"
 1:8:2023 | 12:43:41 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 12:43:41 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 12:43:42 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:43 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:44 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:45 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:46 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:47 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:48 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:49 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 12:43:50 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:41 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 13:1:41 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 13:1:45 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:46 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:1:48 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 13:1:51 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 13:1:51 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 13:1:52 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 13:1:53 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: true
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 13:1:54 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 13:1:55 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:56 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:57 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:58 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:1:59 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:7:40 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 13:7:40 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 13:7:45 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:45 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:46 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 13:7:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:48 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:7:48 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 13:7:51 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 13:7:51 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 13:7:51 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 13:7:52 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 13:7:53 @ >> [PawnScript] | LOG: true
 1:8:2023 | 13:7:54 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 13:7:54 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 13:7:54 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 13:7:54 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 13:7:54 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 13:7:55 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:7:56 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:7:57 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:17:7 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 13:17:7 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 13:17:12 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:12 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:12 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:12 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:13 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:14 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:17:15 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 13:17:17 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 13:17:18 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 13:17:19 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: true
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 13:17:20 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 13:17:21 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 13:17:21 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 13:17:22 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:17:23 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:59:37 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 13:59:37 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 13:59:43 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:44 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 13:59:45 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 13:59:47 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: true
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 13:59:51 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 13:59:52 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 14:0:17 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 14:0:17 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 14:0:23 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 14:0:24 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 14:0:27 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 14:0:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 14:0:29 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: true
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 14:0:30 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 14:0:31 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 14:0:32 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 14:0:33 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 14:0:34 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:5:52 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 17:5:52 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 17:5:58 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:5:59 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 17:6:2 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 17:6:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 17:6:4 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: true
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 17:6:5 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 17:6:7 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:6:8 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:6:29 @ >> [PawnScript] | LOG: OMG actually works
 1:8:2023 | 17:6:29 @ >> [PawnScript] | LOG: ==========================================
 1:8:2023 | 17:6:34 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:34 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:34 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:34 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:34 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 1:8:2023 | 17:6:35 @ >> [PawnScript] | LOG: This is still runnin right? 11
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:36 @ >> [PawnScript] | LOG: The inline finally works!
 1:8:2023 | 17:6:37 @ >> [PawnScript] | LOG: Tasks are working ig
 1:8:2023 | 17:6:39 @ >> [PawnScript] | LOG: 100
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: Printed: Method test #2
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 1
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 3
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 4
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: enum test included
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 5
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: -1
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: 0
 1:8:2023 | 17:6:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Static works here
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Imported 364
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Imported true
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Imported Hello World
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Imported 0.363999
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: Imported 'D'
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: 827346
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: 364.234008
 1:8:2023 | 17:6:41 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 9376216
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 314.159271
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 100000
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 21.763599
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 23746
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: true
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: #emit works!
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 23.746000
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 'K'
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 'Z'
 1:8:2023 | 17:6:42 @ >> [PawnScript] | LOG: 364
 1:8:2023 | 17:6:44 @ >> [PawnScript] | LOG: 2
 1:8:2023 | 17:6:45 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:19:21 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:19:21 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:19:26 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:26 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:26 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:26 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:19:27 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:28 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:19:29 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:19:31 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:19:32 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:19:33 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:19:34 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:19:35 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:19:35 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:28:23 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:28:23 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:28:28 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:28 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:28 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:28 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:28 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:28:29 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:28:31 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:28:33 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:28:34 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:28:35 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:28:36 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:28:37 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:30:34 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:30:34 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:30:39 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:39 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:40 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:41 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:30:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:30:42 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:30:45 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:30:45 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:30:45 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:30:46 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:30:47 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:30:48 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:30:49 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:50 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:51 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:52 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:53 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:30:54 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:31:58 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:31:58 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:32:3 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:3 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:3 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:3 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:3 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:32:4 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:5 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:32:6 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:32:8 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:32:9 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:32:10 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:32:11 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:32:12 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:32:13 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:32:14 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:32:15 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:34:7 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:7 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:9 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:34:9 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:34:13 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: Printed: nullMethod test #2null
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:34:14 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: Imported 0
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: Imported false
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: Imported null
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: Imported 0.000000
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: Imported '0'
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:34:15 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:35:57 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:35:57 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:2 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:36:3 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:36:4 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:36:7 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:36:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:36:9 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:36:10 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:36:12 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:36:13 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:36:14 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:36:15 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:36:16 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:37:41 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:37:41 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:46 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:47 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:47 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:47 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:47 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:37:47 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:37:48 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:37:51 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:37:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:37:53 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:37:54 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:38:34 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 11:38:34 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 11:38:39 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:39 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:40 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:41 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 11:38:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:42 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 11:38:42 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 11:38:45 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 11:38:45 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 11:38:45 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 11:38:46 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 11:38:47 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: true
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 11:38:48 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 11:38:49 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:38:50 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:38:51 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 11:38:52 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:15 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 12:6:15 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 12:6:20 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:20 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:20 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:20 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:20 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:6:21 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:22 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:6:23 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 12:6:25 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 12:6:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 12:6:27 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: true
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 12:6:28 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 12:6:30 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:31 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:32 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:33 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:34 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:6:35 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:10 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 12:24:10 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 12:24:15 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:16 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:17 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 12:24:21 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: true
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:27 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:28 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:29 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:30 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:31 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:25:54 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 12:25:54 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 12:25:59 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:25:59 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:25:59 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:25:59 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:2 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:26:2 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 12:26:5 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 12:26:5 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 12:26:5 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: true
 2:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:26:12 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:26:13 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:27:24 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 12:27:24 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 12:27:34 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: true
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 12:27:39 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:27:40 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:27:41 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:27:42 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:42:17 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 12:42:17 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 12:42:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 12:42:25 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:25 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:25 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:25 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 12:42:25 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 12:42:28 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 12:42:28 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 12:42:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 12:42:29 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 12:42:30 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: true
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 12:42:31 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 12:42:32 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:42:33 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:42:34 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 12:42:35 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 13:34:59 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 13:34:59 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 13:36:12 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 13:36:12 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 13:37:42 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 13:37:42 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 13:37:47 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:47 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:48 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:49 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:37:50 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 13:37:53 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 13:37:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 13:37:55 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: true
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 13:37:56 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 13:37:58 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:37:59 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:38:0 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:38:1 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:38:2 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:44:51 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 13:44:51 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 13:44:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:56 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:56 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:44:57 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:58 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:44:59 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 13:45:1 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 13:45:2 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 13:45:3 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: true
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 13:45:5 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 13:45:6 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:7 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:8 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:9 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:53:6 @ >> [PawnScript] | LOG: OMG actually works
 2:8:2023 | 13:53:6 @ >> [PawnScript] | LOG: ==========================================
 2:8:2023 | 13:53:11 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:11 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:11 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:11 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:11 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 2:8:2023 | 13:53:12 @ >> [PawnScript] | LOG: This is still runnin right? 11
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:13 @ >> [PawnScript] | LOG: The inline finally works!
 2:8:2023 | 13:53:14 @ >> [PawnScript] | LOG: Tasks are working ig
 2:8:2023 | 13:53:16 @ >> [PawnScript] | LOG: 100
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: Printed: Method test #2
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 1
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 2
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 3
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: enum test included
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: 5
 2:8:2023 | 13:53:17 @ >> [PawnScript] | LOG: -1
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: 0
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Static works here
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Imported 364
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Imported true
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Imported Hello World
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Imported 0.363999
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: Imported 'D'
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: 827346
 2:8:2023 | 13:53:18 @ >> [PawnScript] | LOG: 364.234008
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 9376216
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 314.159271
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 100000
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 21.763599
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 23746
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: true
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: #emit works!
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 23.746000
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 'K'
 2:8:2023 | 13:53:19 @ >> [PawnScript] | LOG: 'Z'
 2:8:2023 | 13:53:20 @ >> [PawnScript] | LOG: 364
 2:8:2023 | 13:53:21 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:53:22 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:53:23 @ >> [PawnScript] | LOG: 4
 2:8:2023 | 13:53:24 @ >> [PawnScript] | LOG: 4
 3:8:2023 | 13:44:39 @ >> [PawnScript] | LOG: OMG actually works
 3:8:2023 | 13:44:39 @ >> [PawnScript] | LOG: ==========================================
 3:8:2023 | 13:45:43 @ >> [PawnScript] | LOG: OMG actually works
 3:8:2023 | 13:45:43 @ >> [PawnScript] | LOG: ==========================================
 3:8:2023 | 13:47:42 @ >> [PawnScript] | LOG: OMG actually works
 3:8:2023 | 13:47:42 @ >> [PawnScript] | LOG: ==========================================
 3:8:2023 | 14:45:52 @ >> [PawnScript] | LOG: OMG actually works
 3:8:2023 | 14:45:52 @ >> [PawnScript] | LOG: ==========================================
 3:8:2023 | 14:45:57 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:58 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: This is still runnin right? 11
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:45:59 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: The inline finally works!
 3:8:2023 | 14:46:0 @ >> [PawnScript] | LOG: Tasks are working ig
 3:8:2023 | 14:46:3 @ >> [PawnScript] | LOG: 100
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: Printed: Method test #2
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 1
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 2
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 3
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 4
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: enum test included
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 5
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 5
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: -1
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: 0
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: Static works here
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 3:8:2023 | 14:46:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Static works here
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Imported 364
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Imported true
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Imported Hello World
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Imported 0.363999
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: Imported 'D'
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: 827346
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: 364.234008
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 3:8:2023 | 14:46:5 @ >> [PawnScript] | LOG: 9376216
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 314.159271
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 100000
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 21.763599
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 23746
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: true
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: #emit works!
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 23.746000
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 'K'
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 'Z'
 3:8:2023 | 14:46:6 @ >> [PawnScript] | LOG: 364
 3:8:2023 | 14:46:8 @ >> [PawnScript] | LOG: 4
 3:8:2023 | 14:46:9 @ >> [PawnScript] | LOG: 4
 3:8:2023 | 14:46:10 @ >> [PawnScript] | LOG: 4
 3:8:2023 | 14:46:11 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:27:56 @ >> [PawnScript] | LOG: OMG actually works
 4:8:2023 | 21:27:56 @ >> [PawnScript] | LOG: ==========================================
 4:8:2023 | 21:28:1 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:1 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:2 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: This is still runnin right? 11
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:3 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 4:8:2023 | 21:28:4 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:4 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:4 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:4 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:28:4 @ >> [PawnScript] | LOG: Tasks are working ig
 4:8:2023 | 21:28:7 @ >> [PawnScript] | LOG: 100
 4:8:2023 | 21:28:7 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 4:8:2023 | 21:28:7 @ >> [PawnScript] | LOG: Printed: Method test #2
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 1
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 2
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 3
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: enum test included
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 5
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 5
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: -1
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: 0
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: Static works here
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: Static works here
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: Imported 364
 4:8:2023 | 21:28:8 @ >> [PawnScript] | LOG: Imported true
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: Imported Hello World
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: Imported 0.363999
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: Imported 'D'
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 827346
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 364.234008
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 9376216
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 314.159271
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 100000
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: 21.763599
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 4:8:2023 | 21:28:9 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: 23746
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: true
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: #emit works!
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: 23.746000
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: 'K'
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: 'Z'
 4:8:2023 | 21:28:10 @ >> [PawnScript] | LOG: 364
 4:8:2023 | 21:28:11 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:28:12 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:28:13 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:28:14 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:28:15 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:31:5 @ >> [PawnScript] | LOG: OMG actually works
 4:8:2023 | 21:31:5 @ >> [PawnScript] | LOG: ==========================================
 4:8:2023 | 21:31:7 @ >> [PawnScript] | LOG: Stack Works!
 4:8:2023 | 21:31:10 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:11 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: This is still runnin right? 11
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:12 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 4:8:2023 | 21:31:13 @ >> [PawnScript] | LOG: Tasks are working ig
 4:8:2023 | 21:31:16 @ >> [PawnScript] | LOG: 100
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: Printed: Method test #2
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 1
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 2
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 3
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: enum test included
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 5
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 5
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: -1
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: 0
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: Static works here
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: Static works here
 4:8:2023 | 21:31:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: Imported 364
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: Imported true
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: Imported Hello World
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: Imported 0.363999
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: Imported 'D'
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: 827346
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: 364.234008
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: 9376216
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: 314.159271
 4:8:2023 | 21:31:18 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 100000
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 21.763599
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 23746
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: true
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: #emit works!
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 23.746000
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 'K'
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 'Z'
 4:8:2023 | 21:31:19 @ >> [PawnScript] | LOG: 364
 4:8:2023 | 21:31:21 @ >> [PawnScript] | LOG: 4
 4:8:2023 | 21:31:22 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:15 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 10:38:15 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 10:38:17 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 10:38:20 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:22 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:38:23 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 10:38:26 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:38:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 10:38:28 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: true
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 10:38:29 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 10:38:31 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:32 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:33 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:34 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:35 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:36 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:38:37 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:43:32 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 10:43:32 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 10:43:33 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:37 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:43:38 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:43:39 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 10:43:42 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:43:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 10:43:44 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: true
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 10:43:45 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 10:43:47 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:44:43 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 10:44:43 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 10:44:45 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 10:44:48 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:48 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:48 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:49 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 10:44:51 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 10:44:54 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 10:44:54 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 10:44:54 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 10:44:55 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: true
 5:8:2023 | 10:44:56 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 10:44:57 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 10:44:57 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 10:44:57 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 10:44:57 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 10:44:58 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:44:59 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 10:45:0 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:30:49 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:30:49 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:30:50 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:54 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:30:55 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:30:56 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:30:59 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:31:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:31:1 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:31:2 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:31:3 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:31:3 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:31:4 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:5 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:6 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:7 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:8 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:9 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:10 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:11 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:12 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:31:13 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:34:2 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:34:2 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:34:4 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:34:7 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:7 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:7 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:8 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:9 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:34:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:34:10 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:34:13 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:34:13 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:34:13 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:34:14 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:34:15 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:34:16 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:34:17 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:34:17 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:34:18 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:34:19 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:34:20 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:34:21 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:9 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:36:9 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:36:11 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:36:14 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:14 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:14 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:15 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:16 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:17 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:36:17 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:36:20 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:36:20 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:36:20 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:36:20 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:36:21 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:36:22 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:36:23 @ >> [PawnScript] | LOG: Just no!
 5:8:2023 | 20:36:25 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:26 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:27 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:28 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:29 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:30 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:31 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:32 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:33 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:36:34 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:3 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:37:3 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:37:5 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:37:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:8 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:8 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:9 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:10 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:11 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:37:11 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:37:13 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:14 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:37:15 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:37:16 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:37:17 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 20:37:19 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:20 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:21 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:22 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:37:23 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:32 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:39:32 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:39:34 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:39:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:39 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:40 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:39:40 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:39:43 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:39:43 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:39:43 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:39:43 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:39:43 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:39:44 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:39:45 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:39:46 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:39:46 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:39:46 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:39:46 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:39:46 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 20:39:48 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:49 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:50 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:51 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:39:52 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:40 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:40:40 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:40:41 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:45 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:40:46 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:40:47 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:40:50 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:40:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:40:52 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:40:53 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:40:54 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:40:54 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:40:54 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:40:54 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 20:40:55 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:56 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:57 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:58 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:40:59 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:41:0 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:41:1 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:41:2 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:30 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:42:30 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:42:32 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:42:35 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:35 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:36 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:37 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:42:38 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:38 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:38 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:38 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:42:38 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:42:41 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:42:41 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:42:41 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:42:42 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:42:43 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:42:44 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:42:45 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:42:45 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:42:45 @ >> [PawnScript] | LOG: This was not expected!
 5:8:2023 | 20:42:45 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 20:42:46 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:47 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:48 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:49 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:50 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:42:51 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:20 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 20:46:20 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 20:46:21 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:25 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 20:46:26 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 20:46:27 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 20:46:30 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 20:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 20:46:32 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: true
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 20:46:33 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: Oh yeah!
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: So yeah!
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: You should always return a value!
 5:8:2023 | 20:46:34 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 20:46:35 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:36 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:37 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:38 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:39 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:40 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:41 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 20:46:42 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 22:2:43 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 22:2:43 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 22:2:45 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 22:2:48 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:49 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:2:51 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 22:2:54 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 22:2:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 22:2:56 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: true
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 22:2:57 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: Oh yeah!
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: So yeah!
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: You should always return a value!
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 22:2:58 @ >> [PawnScript] | LOG: My namespace function works!
 5:8:2023 | 22:4:42 @ >> [PawnScript] | LOG: OMG actually works
 5:8:2023 | 22:4:42 @ >> [PawnScript] | LOG: ==========================================
 5:8:2023 | 22:4:44 @ >> [PawnScript] | LOG: Stack Works!
 5:8:2023 | 22:4:47 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:47 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:47 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:47 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:48 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: This is still runnin right? 11
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:49 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:50 @ >> [PawnScript] | LOG: The inline finally works!
 5:8:2023 | 22:4:50 @ >> [PawnScript] | LOG: Tasks are working ig
 5:8:2023 | 22:4:52 @ >> [PawnScript] | LOG: 100
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: Printed: Method test #2
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: 1
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: 2
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: 3
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: 4
 5:8:2023 | 22:4:53 @ >> [PawnScript] | LOG: enum test included
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: 5
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: -1
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: 0
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Static works here
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Imported 364
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Imported true
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Imported Hello World
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Imported 0.363999
 5:8:2023 | 22:4:54 @ >> [PawnScript] | LOG: Imported 'D'
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 827346
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 364.234008
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 9376216
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 314.159271
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 100000
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 21.763599
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 23746
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: true
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: #emit works!
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 23.746000
 5:8:2023 | 22:4:55 @ >> [PawnScript] | LOG: 'K'
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: 'Z'
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: 364
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: No way this worked!
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: This has also worked...
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: Oh yeah!
 5:8:2023 | 22:4:56 @ >> [PawnScript] | LOG: So yeah!
 5:8:2023 | 22:4:57 @ >> [PawnScript] | LOG: You should always return a value!
 5:8:2023 | 22:4:57 @ >> [PawnScript] | LOG: This was again expected!
 5:8:2023 | 22:4:57 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 10:36:16 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 10:36:16 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 10:36:18 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 10:36:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:22 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:23 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:36:24 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 10:36:27 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 10:36:27 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 10:36:28 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 10:36:29 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: true
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 10:36:30 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 10:36:31 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 10:36:33 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:34 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:35 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:36 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:37 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:38 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:39 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:40 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:41 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:36:42 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:37:34 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 10:37:34 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 10:37:35 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:39 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 10:37:40 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 10:37:41 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 10:37:44 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 10:37:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 10:37:46 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: true
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 10:37:47 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 10:37:48 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:49 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:50 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:51 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:52 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:53 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:54 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:55 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:56 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 10:37:57 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 11:11:11 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 11:11:11 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 11:11:13 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 11:11:16 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:17 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:11:19 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 11:11:22 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 11:11:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 11:11:23 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 11:11:24 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: true
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 11:11:25 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 11:11:26 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 11:11:27 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 11:11:27 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 11:11:28 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:11:29 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:11:30 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:11:31 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:11:32 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:3 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 11:14:3 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 11:14:5 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 11:14:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:8 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:8 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:9 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:10 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:11 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:14:11 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 11:14:13 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:14 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 11:14:15 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: true
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 11:14:16 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 11:14:17 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 11:14:18 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 11:14:18 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 11:14:18 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 11:14:18 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 11:14:18 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 11:14:21 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:22 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:23 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:24 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:25 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:26 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:14:27 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:16:11 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 11:16:11 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 11:16:13 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 11:16:16 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:16 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:17 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:18 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 11:16:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 11:16:19 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 11:16:22 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 11:16:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 11:16:22 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 11:16:23 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 11:16:24 @ >> [PawnScript] | LOG: true
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 11:16:25 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 11:16:26 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 11:16:29 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:16:30 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 11:16:31 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:12 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 12:31:12 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 12:31:14 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 12:31:17 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:18 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:19 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:31:20 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 12:31:23 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:31:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 12:31:25 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: true
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 12:31:26 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 12:31:27 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 12:31:28 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 12:31:31 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:32 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:33 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:34 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:31:35 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:32:46 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 12:32:46 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 12:32:48 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 12:32:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:51 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:52 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:53 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 12:32:54 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:54 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:54 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:54 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:32:54 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 12:32:57 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 12:32:57 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 12:32:57 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 12:32:58 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 12:32:59 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: true
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 12:33:0 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 12:33:1 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 12:35:7 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 12:35:7 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 12:35:9 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 12:35:12 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:12 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:12 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:12 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:12 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:35:13 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:14 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:35:15 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 12:35:17 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 12:35:18 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 12:35:19 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: true
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 12:35:20 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 12:35:21 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 12:35:22 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 12:35:22 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 12:35:22 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 12:35:22 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 12:35:58 @ >> [PawnScript] | LOG: OMG actually works
 7:8:2023 | 12:35:58 @ >> [PawnScript] | LOG: ==========================================
 7:8:2023 | 12:36:0 @ >> [PawnScript] | LOG: Stack Works!
 7:8:2023 | 12:36:3 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:3 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:4 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: This is still runnin right? 11
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:5 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: The inline finally works!
 7:8:2023 | 12:36:6 @ >> [PawnScript] | LOG: Tasks are working ig
 7:8:2023 | 12:36:9 @ >> [PawnScript] | LOG: 100
 7:8:2023 | 12:36:9 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: Printed: Method test #2
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 1
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 2
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 3
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: enum test included
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 5
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: -1
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: 0
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: Static works here
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: Imported 364
 7:8:2023 | 12:36:10 @ >> [PawnScript] | LOG: Imported true
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: Imported Hello World
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: Imported 0.363999
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: Imported 'D'
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 827346
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 364.234008
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 9376216
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 314.159271
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 100000
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: 21.763599
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 7:8:2023 | 12:36:11 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: 23746
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: true
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: #emit works!
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: 23.746000
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: 'K'
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: 'Z'
 7:8:2023 | 12:36:12 @ >> [PawnScript] | LOG: 364
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: No way this worked!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: This has also worked...
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: Oh yeah!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: So yeah!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: You should always return a value!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: This was again expected!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: My namespace function works!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: Hello World!
 7:8:2023 | 12:36:13 @ >> [PawnScript] | LOG: Try works!
 7:8:2023 | 12:36:18 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:19 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:20 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:21 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:22 @ >> [PawnScript] | LOG: 4
 7:8:2023 | 12:36:23 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:13 @ >> [PawnScript] | LOG: OMG actually works
 9:8:2023 | 15:30:13 @ >> [PawnScript] | LOG: ==========================================
 9:8:2023 | 15:30:15 @ >> [PawnScript] | LOG: Stack Works!
 9:8:2023 | 15:30:18 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:18 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:18 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:18 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:30:19 @ >> [PawnScript] | LOG: This is still runnin right? 11
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:20 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:30:21 @ >> [PawnScript] | LOG: Tasks are working ig
 9:8:2023 | 15:30:23 @ >> [PawnScript] | LOG: 100
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: Printed: Method test #2
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: 1
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: 2
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: 3
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: enum test included
 9:8:2023 | 15:30:24 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: -1
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: 0
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Imported 364
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Imported true
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Imported Hello World
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Imported 0.363999
 9:8:2023 | 15:30:25 @ >> [PawnScript] | LOG: Imported 'D'
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 827346
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 364.234008
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 9376216
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 314.159271
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 100000
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 21.763599
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 23746
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: true
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: #emit works!
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 23.746000
 9:8:2023 | 15:30:26 @ >> [PawnScript] | LOG: 'K'
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: 'Z'
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: 364
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: No way this worked!
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: This has also worked...
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: Oh yeah!
 9:8:2023 | 15:30:27 @ >> [PawnScript] | LOG: So yeah!
 9:8:2023 | 15:30:28 @ >> [PawnScript] | LOG: You should always return a value!
 9:8:2023 | 15:30:28 @ >> [PawnScript] | LOG: This was again expected!
 9:8:2023 | 15:30:28 @ >> [PawnScript] | LOG: My namespace function works!
 9:8:2023 | 15:30:28 @ >> [PawnScript] | LOG: Hello World!
 9:8:2023 | 15:30:28 @ >> [PawnScript] | LOG: Try works!
 9:8:2023 | 15:30:31 @ >> [PawnScript] | LOG: Hello World again
 9:8:2023 | 15:30:33 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:34 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:35 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:36 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:30:37 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:33 @ >> [PawnScript] | LOG: OMG actually works
 9:8:2023 | 15:32:33 @ >> [PawnScript] | LOG: ==========================================
 9:8:2023 | 15:32:35 @ >> [PawnScript] | LOG: Stack Works!
 9:8:2023 | 15:32:38 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:38 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:38 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: This is still runnin right? 11
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:40 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:41 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:41 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 15:32:41 @ >> [PawnScript] | LOG: Tasks are working ig
 9:8:2023 | 15:32:44 @ >> [PawnScript] | LOG: 100
 9:8:2023 | 15:32:44 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 9:8:2023 | 15:32:44 @ >> [PawnScript] | LOG: Printed: Method test #2
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 1
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 2
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 3
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: enum test included
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: -1
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: 0
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Imported 364
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Imported true
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Imported Hello World
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Imported 0.363999
 9:8:2023 | 15:32:45 @ >> [PawnScript] | LOG: Imported 'D'
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 827346
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 364.234008
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 9376216
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 314.159271
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 100000
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 21.763599
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: 23746
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: true
 9:8:2023 | 15:32:46 @ >> [PawnScript] | LOG: #emit works!
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: 23.746000
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: 'K'
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: 'Z'
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: 364
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: No way this worked!
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: This has also worked...
 9:8:2023 | 15:32:47 @ >> [PawnScript] | LOG: Oh yeah!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: So yeah!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: You should always return a value!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: This was again expected!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: My namespace function works!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: Hello World!
 9:8:2023 | 15:32:48 @ >> [PawnScript] | LOG: Try works!
 9:8:2023 | 15:32:52 @ >> [PawnScript] | LOG: Hello World again
 9:8:2023 | 15:32:53 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:54 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:55 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:56 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:57 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:58 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:32:59 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:33:0 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 15:33:1 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:27 @ >> [PawnScript] | LOG: OMG actually works
 9:8:2023 | 16:47:27 @ >> [PawnScript] | LOG: ==========================================
 9:8:2023 | 16:47:29 @ >> [PawnScript] | LOG: Stack Works!
 9:8:2023 | 16:47:32 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:32 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:32 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:33 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: This is still runnin right? 11
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:34 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:35 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:35 @ >> [PawnScript] | LOG: The inline finally works!
 9:8:2023 | 16:47:35 @ >> [PawnScript] | LOG: Tasks are working ig
 9:8:2023 | 16:47:38 @ >> [PawnScript] | LOG: 100
 9:8:2023 | 16:47:38 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 9:8:2023 | 16:47:38 @ >> [PawnScript] | LOG: Printed: Method test #2
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 1
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 2
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 3
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: enum test included
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 5
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: -1
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: 0
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Static works here
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Imported 364
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Imported true
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Imported Hello World
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Imported 0.363999
 9:8:2023 | 16:47:39 @ >> [PawnScript] | LOG: Imported 'D'
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 827346
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 364.234008
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 9376216
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 314.159271
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 100000
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 21.763599
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: 23746
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: true
 9:8:2023 | 16:47:40 @ >> [PawnScript] | LOG: #emit works!
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: 23.746000
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: 'K'
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: 'Z'
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: 364
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: No way this worked!
 9:8:2023 | 16:47:41 @ >> [PawnScript] | LOG: This has also worked...
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: Oh yeah!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: So yeah!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: You should always return a value!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: This was again expected!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: My namespace function works!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: Hello World!
 9:8:2023 | 16:47:42 @ >> [PawnScript] | LOG: Try works!
 9:8:2023 | 16:47:46 @ >> [PawnScript] | LOG: Hello World again
 9:8:2023 | 16:47:47 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:48 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:49 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:50 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:51 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:52 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:53 @ >> [PawnScript] | LOG: 4
 9:8:2023 | 16:47:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:21:48 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 12:21:48 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 12:21:50 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 12:21:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:54 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:54 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:54 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:55 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 12:21:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:21:57 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 12:22:0 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 12:22:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 12:22:2 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: true
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 12:22:3 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 12:22:4 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 12:22:4 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 12:22:4 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 12:22:4 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 12:22:4 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 12:22:5 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 12:22:5 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 12:22:5 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 12:22:5 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 12:22:9 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 12:25:14 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 12:25:14 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 12:25:16 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 12:25:19 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:19 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:19 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:20 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 12:25:21 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:22 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:22 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:22 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 12:25:22 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 12:25:25 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 12:25:25 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 12:25:25 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 12:25:26 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 12:25:27 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: true
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 12:25:28 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 12:25:29 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 12:25:30 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 12:25:33 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 12:25:34 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:35 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:36 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:37 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:38 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:39 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:40 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:41 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:42 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:43 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:44 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:46 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:47 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:48 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:50 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:51 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:52 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:53 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:55 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:56 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:57 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:58 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:25:59 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:2 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:3 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:4 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:5 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:7 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:13 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:14 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:21 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:23 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:24 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:25 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:27 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:31 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:32 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:33 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:34 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:35 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:36 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:37 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:38 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:39 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:40 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:41 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:42 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:43 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:44 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:46 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:47 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:48 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:50 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:51 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:52 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:53 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:55 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:56 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:57 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:58 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:26:59 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:0 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:2 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:3 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:4 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:5 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:7 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:8 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:10 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:11 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:13 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:14 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:21 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:22 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:23 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:24 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:25 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:27 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:28 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:30 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:31 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:32 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:33 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:34 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:35 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:36 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:37 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:38 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:39 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:40 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:41 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:42 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:43 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:44 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:46 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:47 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:48 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:50 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:51 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:52 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:53 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:55 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:56 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:57 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:58 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:27:59 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:0 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:2 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:3 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:4 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:5 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:7 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:8 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:10 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:11 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:13 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:14 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:21 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:22 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:23 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:24 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:25 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:27 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:28 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:30 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:31 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:32 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:33 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:34 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:35 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:36 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:37 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:38 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:39 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:40 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:41 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:42 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:43 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:44 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:46 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:47 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:48 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:50 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:51 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:52 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:53 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:55 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:56 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:57 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:58 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:28:59 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:0 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:2 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:3 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:4 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:5 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:7 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:8 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:10 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:11 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:13 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:14 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:21 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 12:29:22 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:21:8 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 15:21:8 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 15:21:10 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:14 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 15:21:15 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:21:16 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 15:21:19 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 15:21:20 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 15:21:21 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: true
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 15:21:22 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 15:21:23 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 15:21:24 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 15:21:24 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 15:21:27 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 15:21:27 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 15:21:27 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 15:25:49 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 15:25:49 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 15:25:51 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 15:25:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:54 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:54 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:55 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 15:25:56 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:57 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:25:57 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 15:26:0 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 15:26:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 15:26:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 15:26:1 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 15:26:2 @ >> [PawnScript] | LOG: true
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 15:26:3 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 15:26:4 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 15:26:8 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 15:26:8 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 15:26:8 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 15:26:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:10 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:11 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:13 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:14 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:26:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:0 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 15:29:0 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 15:29:2 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 15:29:5 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:5 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:6 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:7 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:29:8 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 15:29:11 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 15:29:11 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 15:29:11 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 15:29:12 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 15:29:13 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: true
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 15:29:14 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 15:29:15 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 15:29:19 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 15:29:19 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 15:29:19 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 15:29:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:21 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:22 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:23 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:29:24 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:6 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 15:31:6 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 15:31:8 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 15:31:11 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 15:31:14 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 15:31:17 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 15:31:17 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 15:31:18 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 15:31:19 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: true
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 15:31:20 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 15:31:21 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 15:31:22 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 15:31:25 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 15:31:25 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 15:31:25 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 15:31:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:27 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:28 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 15:31:30 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:14:47 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:14:47 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:22:19 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:22:19 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:24:3 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:24:4 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:24:29 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:24:29 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:26:11 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:26:11 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:27:49 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:27:49 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:32:30 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:32:30 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:32:50 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:32:51 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:36:47 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:36:47 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:38:24 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:38:24 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:38:28 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 21:38:35 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:35 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:36 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:36 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:36 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:37 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:37 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:37 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:38:38 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 21:38:39 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:39 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:39 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:39 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 21:38:40 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:40 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:40 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:41 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:38:41 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 21:38:47 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 21:38:48 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 21:38:48 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:38:49 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 21:38:50 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: true
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 21:38:56 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 21:38:56 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 21:38:56 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: Lmao
 15:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:39:7 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:39:8 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:39:9 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:17 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:45:17 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:45:19 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 21:45:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 21:45:25 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:25 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:25 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:25 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:45:25 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 21:45:28 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 21:45:28 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 21:45:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 21:45:29 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 21:45:30 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: true
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 21:45:31 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 21:45:32 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: Lmao
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 23
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 23243
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: true
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: std::string works
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 23.243000
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 4323.243164
 15:8:2023 | 21:45:36 @ >> [PawnScript] | LOG: 's'
 15:8:2023 | 21:45:37 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:38 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:39 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:40 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:41 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:42 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:43 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:44 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:46 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:47 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:48 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:49 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:50 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:51 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:52 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:53 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:45:54 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:46:55 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 21:46:55 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 21:46:57 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 21:47:0 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:0 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:0 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:0 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 21:47:1 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 21:47:3 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 21:47:5 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 21:47:6 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 21:47:7 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: true
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 21:47:8 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 21:47:9 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 21:47:10 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 21:47:10 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 21:47:10 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 21:47:10 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 21:47:13 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: Lmao
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 23
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 23243
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: true
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: std::string works
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 23.243000
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 4323.243164
 15:8:2023 | 21:47:14 @ >> [PawnScript] | LOG: 's'
 15:8:2023 | 21:47:15 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:16 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:18 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:19 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 21:47:20 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:5 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 22:25:5 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 22:25:7 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 22:25:10 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:11 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:12 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:25:13 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 22:25:16 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 22:25:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 22:25:18 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: true
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 22:25:19 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 22:25:20 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 22:25:21 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: Lmao
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: 23
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: 23243
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: true
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: std::string works
 15:8:2023 | 22:25:24 @ >> [PawnScript] | LOG: 23.243000
 15:8:2023 | 22:25:25 @ >> [PawnScript] | LOG: 4323.243164
 15:8:2023 | 22:25:25 @ >> [PawnScript] | LOG: 's'
 15:8:2023 | 22:25:25 @ >> [PawnScript] | LOG: 74
 15:8:2023 | 22:25:26 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:27 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:28 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:29 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:30 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:25:31 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:43:24 @ >> [PawnScript] | LOG: OMG actually works
 15:8:2023 | 22:43:24 @ >> [PawnScript] | LOG: ==========================================
 15:8:2023 | 22:43:26 @ >> [PawnScript] | LOG: Stack Works!
 15:8:2023 | 22:43:29 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:30 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: This is still runnin right? 11
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:31 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: The inline finally works!
 15:8:2023 | 22:43:32 @ >> [PawnScript] | LOG: Tasks are working ig
 15:8:2023 | 22:43:35 @ >> [PawnScript] | LOG: 100
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: Printed: Method test #2
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 1
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 2
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 3
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: enum test included
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 5
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: -1
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: Static works here
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 15:8:2023 | 22:43:36 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: Imported 364
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: Imported true
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: Imported Hello World
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: Imported 0.363999
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: Imported 'D'
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 827346
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 364.234008
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 9376216
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 314.159271
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 100000
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: 21.763599
 15:8:2023 | 22:43:37 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: 23746
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: true
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: #emit works!
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: 23.746000
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: 'K'
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: 'Z'
 15:8:2023 | 22:43:38 @ >> [PawnScript] | LOG: 364
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: No way this worked!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: This has also worked...
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: Oh yeah!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: So yeah!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: You should always return a value!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: This was again expected!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: My namespace function works!
 15:8:2023 | 22:43:39 @ >> [PawnScript] | LOG: Hello World!
 15:8:2023 | 22:43:40 @ >> [PawnScript] | LOG: Try works!
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: Hello World again
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 'j'
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: Hey
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: Lmao
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 23
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 0
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 23243
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: true
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: std::string works
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 23.243000
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 4323.243164
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 's'
 15:8:2023 | 22:43:43 @ >> [PawnScript] | LOG: 74
 15:8:2023 | 22:43:45 @ >> [PawnScript] | LOG: 4
 15:8:2023 | 22:43:46 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:16:42 @ >> [PawnScript] | LOG: OMG actually works
 16:8:2023 | 13:16:42 @ >> [PawnScript] | LOG: ==========================================
 16:8:2023 | 13:16:44 @ >> [PawnScript] | LOG: Stack Works!
 16:8:2023 | 13:16:47 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:47 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:47 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:48 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: This is still runnin right? 11
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:49 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 16:8:2023 | 13:16:50 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:50 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:50 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:50 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:16:50 @ >> [PawnScript] | LOG: Tasks are working ig
 16:8:2023 | 13:16:53 @ >> [PawnScript] | LOG: 100
 16:8:2023 | 13:16:53 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 16:8:2023 | 13:16:53 @ >> [PawnScript] | LOG: Printed: Method test #2
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 1
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 2
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 3
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: enum test included
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 5
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 5
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: -1
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: 0
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: Static works here
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: Static works here
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: Imported 364
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: Imported true
 16:8:2023 | 13:16:54 @ >> [PawnScript] | LOG: Imported Hello World
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: Imported 0.363999
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: Imported 'D'
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 827346
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 364.234008
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 9376216
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 314.159271
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 100000
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 21.763599
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 16:8:2023 | 13:16:55 @ >> [PawnScript] | LOG: 23746
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: true
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: #emit works!
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: 23.746000
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: 'K'
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: 'Z'
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: 364
 16:8:2023 | 13:16:56 @ >> [PawnScript] | LOG: No way this worked!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: This has also worked...
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: Oh yeah!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: So yeah!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: You should always return a value!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: This was again expected!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: My namespace function works!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: Hello World!
 16:8:2023 | 13:16:57 @ >> [PawnScript] | LOG: Try works!
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: Hello World again
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 'j'
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: Hey
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: Lmao
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 23
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 0
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 23243
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: true
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: std::string works
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 23.243000
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 4323.243164
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 's'
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: 74
 16:8:2023 | 13:17:1 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 16:8:2023 | 13:17:2 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:17:3 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:17:4 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:17:5 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:17:6 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:3 @ >> [PawnScript] | LOG: OMG actually works
 16:8:2023 | 13:52:3 @ >> [PawnScript] | LOG: ==========================================
 16:8:2023 | 13:52:5 @ >> [PawnScript] | LOG: Stack Works!
 16:8:2023 | 13:52:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: This is still runnin right? 11
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: The inline finally works!
 16:8:2023 | 13:52:11 @ >> [PawnScript] | LOG: Tasks are working ig
 16:8:2023 | 13:52:14 @ >> [PawnScript] | LOG: 100
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: Printed: Method test #2
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 1
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 2
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 3
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: enum test included
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 5
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 5
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: -1
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: 0
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: Static works here
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: Static works here
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 16:8:2023 | 13:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: Imported 364
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: Imported true
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: Imported Hello World
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: Imported 0.363999
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: Imported 'D'
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 827346
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 364.234008
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 9376216
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 314.159271
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 100000
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: 21.763599
 16:8:2023 | 13:52:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: 23746
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: true
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: #emit works!
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: 23.746000
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: 'K'
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: 'Z'
 16:8:2023 | 13:52:17 @ >> [PawnScript] | LOG: 364
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: No way this worked!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: This has also worked...
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: Oh yeah!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: So yeah!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: You should always return a value!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: This was again expected!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: My namespace function works!
 16:8:2023 | 13:52:18 @ >> [PawnScript] | LOG: Hello World!
 16:8:2023 | 13:52:19 @ >> [PawnScript] | LOG: Try works!
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: Hello World again
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 'j'
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: Hey
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: Lmao
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 23
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 0
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 23243
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: true
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: std::string works
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 23.243000
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 4323.243164
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 's'
 16:8:2023 | 13:52:22 @ >> [PawnScript] | LOG: 74
 16:8:2023 | 13:52:23 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 16:8:2023 | 13:52:23 @ >> [PawnScript] | LOG: 4308.519042
 16:8:2023 | 13:52:24 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:25 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:26 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:27 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:28 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:29 @ >> [PawnScript] | LOG: 4
 16:8:2023 | 13:52:30 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:29:35 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:29:35 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:29:37 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:29:40 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:40 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:40 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:40 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:40 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:29:41 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:42 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:29:43 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:31:21 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:31:21 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:31:22 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:26 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:27 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:27 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:27 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:27 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:31:27 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:31:28 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:31:31 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:31:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 10:31:33 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 10:32:15 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:32:15 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:32:17 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:32:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:21 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:21 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:21 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:22 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:23 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:32:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:32:24 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:34:16 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:34:16 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:34:18 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:34:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:22 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:34:24 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:34:27 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 10:34:27 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:34:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 10:34:29 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 10:34:30 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 10:34:31 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 10:34:32 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 10:34:35 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 10:34:36 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 10:34:36 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 10:34:36 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 10:34:36 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 10:34:36 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 10:34:37 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:38 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:39 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:41 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:41 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:34:42 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:51:17 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:51:17 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:51:19 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:51:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:51:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:51:25 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:51:27 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 10:51:28 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 10:51:28 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 10:52:3 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:52:3 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:52:4 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:8 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:9 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:9 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:9 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:52:9 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:52:10 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:52:13 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:52:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 10:52:15 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 10:52:16 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 10:52:17 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 10:52:18 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 10:52:18 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 10:52:18 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 10:52:21 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 10:52:21 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 10:52:21 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 10:52:21 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 10:52:22 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 10:52:23 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:52:24 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:52:25 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:52:26 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:26 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 10:55:26 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 10:55:27 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 10:55:31 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:31 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:31 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:31 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:31 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 10:55:32 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:33 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 10:55:34 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 10:55:37 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 10:55:37 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 10:55:37 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 10:55:38 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 10:55:39 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 10:55:40 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 10:55:41 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: true
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 10:55:45 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 10:55:46 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 10:55:47 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:48 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:49 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:50 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:51 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:52 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 10:55:53 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:5:18 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 11:5:18 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 11:5:19 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 11:5:23 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:23 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:23 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:23 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:23 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:5:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:25 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:26 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:26 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:5:26 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 11:5:29 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 11:5:29 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 11:5:29 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 11:5:30 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 11:5:31 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 11:5:32 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 11:5:33 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 11:5:37 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 11:5:38 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 11:5:38 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 11:5:39 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:5:40 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:5:41 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:48:0 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 11:48:0 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 11:48:2 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 11:48:7 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:7 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:7 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:7 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:7 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:8 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:8 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:8 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:8 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:8 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:9 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 11:48:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:10 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:48:10 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 11:48:14 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 11:48:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:48:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 11:48:16 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 11:48:17 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 11:48:18 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 11:48:19 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 11:48:20 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 11:48:20 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 11:48:20 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 11:48:24 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 11:48:24 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 11:48:24 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 11:48:25 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 11:48:26 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:48:27 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:48:28 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:53:7 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 11:53:7 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 11:53:10 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 11:53:14 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:14 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:15 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:15 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:15 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:15 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:16 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:53:17 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 11:53:21 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 11:53:22 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 11:53:23 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 11:53:24 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 11:53:25 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 11:53:26 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 11:53:26 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 11:53:26 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 11:53:27 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 11:53:28 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 11:53:32 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 11:53:33 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 11:53:33 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 11:53:34 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:53:35 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:54:49 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 11:54:49 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 11:54:52 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 11:54:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:57 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:57 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:58 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:58 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:58 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:59 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:59 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:59 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 11:54:59 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 11:55:0 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 11:55:1 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 11:55:8 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 11:55:8 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 11:55:8 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 11:55:9 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 11:55:10 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 11:55:11 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 11:55:12 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 11:55:13 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 11:55:14 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 11:55:14 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 11:55:14 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 11:55:18 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: true
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 11:55:19 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 12:6:48 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 12:6:48 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 12:6:50 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 12:6:55 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:55 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:55 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:55 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:55 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:6:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 12:6:57 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:58 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:58 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:58 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:6:58 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 12:7:2 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 12:7:2 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 12:7:2 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 12:7:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 12:7:4 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 12:7:5 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: true
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 12:7:6 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 12:7:7 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 12:7:8 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 12:7:8 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 12:7:8 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 12:7:12 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 12:7:12 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 12:7:12 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 12:7:12 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: true
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 12:7:13 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 12:7:14 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:15 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:16 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:17 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:18 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:19 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:20 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:21 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:22 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:23 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:24 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:25 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:26 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:27 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:28 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:29 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:30 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:31 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:32 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:7:33 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:22 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 12:8:22 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 12:8:24 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 12:8:29 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:29 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:29 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:29 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:29 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:30 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:30 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:30 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:30 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:30 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:31 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 12:8:32 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:32 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:32 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:32 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 12:8:32 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 12:8:36 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 12:8:36 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 12:8:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 12:8:38 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 12:8:39 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: true
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 12:8:40 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 12:8:41 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 12:8:42 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 12:8:42 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 12:8:42 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 12:8:46 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 12:8:46 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 12:8:46 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: true
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 12:8:47 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 12:8:48 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:49 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:50 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:51 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:52 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:53 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:54 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:55 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 12:8:56 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:45:30 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 17:45:30 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 17:45:32 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 17:45:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 17:45:40 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:40 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:40 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:40 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:45:40 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 17:45:44 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:45:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 17:45:46 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 17:45:47 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 17:45:48 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 17:45:49 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 17:45:49 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 17:45:50 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 17:45:55 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 17:45:56 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 17:46:54 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 17:46:58 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:46:59 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:46:59 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:46:59 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:46:59 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:46:59 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:47:0 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:47:0 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:47:0 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:47:0 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:47:0 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:1 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:2 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:47:2 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 17:47:5 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 17:47:6 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 17:47:6 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:47:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 17:47:8 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:47:9 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 17:47:10 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 17:47:10 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 17:47:10 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 17:47:10 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 17:47:11 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 17:47:12 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 17:47:12 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 17:47:16 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 17:47:17 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 17:47:18 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:47:19 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:47:20 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:47:21 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:47:22 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:3 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 17:55:3 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 17:55:6 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 17:55:10 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:10 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:10 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:11 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:12 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 17:55:12 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 17:55:12 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:12 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:12 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 17:55:13 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 17:55:17 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 17:55:18 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 17:55:18 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 17:55:19 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 17:55:20 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 17:55:21 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 17:55:22 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 17:55:22 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 17:55:22 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 17:55:23 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 17:55:24 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 17:55:24 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 17:55:28 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: true
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 17:55:29 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 17:55:30 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:31 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:33 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:33 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:34 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:35 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 17:55:36 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:17:56 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 22:17:56 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 22:17:58 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:3 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:4 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:4 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:4 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:4 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:18:4 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 22:18:5 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:6 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:6 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:6 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:18:6 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 22:18:10 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 22:18:10 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 22:18:10 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:18:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 22:18:12 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 22:18:13 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 22:18:14 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 22:18:15 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 22:18:16 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 22:18:16 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 22:18:16 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 22:18:20 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 22:18:20 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 22:18:20 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 22:18:21 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 22:18:22 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:23 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:24 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:25 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:26 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:27 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:18:28 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:13 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 22:46:13 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 22:46:16 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 22:46:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:21 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:21 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:21 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:22 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:22 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:22 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:46:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 22:46:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:23 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:24 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:46:25 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 22:46:29 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:46:30 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 22:46:31 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 22:46:32 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 22:46:33 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:46:34 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 22:46:34 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 22:46:34 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 22:46:34 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 22:46:34 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 22:46:35 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 22:46:35 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 22:46:35 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 22:46:35 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 22:46:35 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 22:46:36 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 22:46:36 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 22:46:36 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 22:46:36 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 22:46:41 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 22:46:41 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 22:46:41 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 22:46:41 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 22:46:42 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 22:46:43 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:44 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:45 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:46 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:47 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:48 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:49 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:46:50 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:48:28 @ >> [PawnScript] | LOG: OMG actually works
 17:8:2023 | 22:48:29 @ >> [PawnScript] | LOG: ==========================================
 17:8:2023 | 22:48:31 @ >> [PawnScript] | LOG: Stack Works!
 17:8:2023 | 22:48:36 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:36 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:36 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:37 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:37 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:37 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:37 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:38 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:38 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 17:8:2023 | 22:48:38 @ >> [PawnScript] | LOG: This is still runnin right? 11
 17:8:2023 | 22:48:38 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:39 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:40 @ >> [PawnScript] | LOG: The inline finally works!
 17:8:2023 | 22:48:40 @ >> [PawnScript] | LOG: Tasks are working ig
 17:8:2023 | 22:48:44 @ >> [PawnScript] | LOG: 100
 17:8:2023 | 22:48:45 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 17:8:2023 | 22:48:45 @ >> [PawnScript] | LOG: Printed: Method test #2
 17:8:2023 | 22:48:45 @ >> [PawnScript] | LOG: 1
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 2
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 3
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: enum test included
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 5
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: -1
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: Static works here
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 17:8:2023 | 22:48:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: Imported 364
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: Imported true
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: Imported Hello World
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: Imported 0.363999
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: Imported 'D'
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: 827346
 17:8:2023 | 22:48:47 @ >> [PawnScript] | LOG: 364.234008
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: 9376216
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: 314.159271
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: 100000
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: 21.763599
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 17:8:2023 | 22:48:48 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: 23746
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: #emit works!
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: 23.746000
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: 'K'
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: 'Z'
 17:8:2023 | 22:48:49 @ >> [PawnScript] | LOG: 364
 17:8:2023 | 22:48:50 @ >> [PawnScript] | LOG: No way this worked!
 17:8:2023 | 22:48:50 @ >> [PawnScript] | LOG: This has also worked...
 17:8:2023 | 22:48:50 @ >> [PawnScript] | LOG: Oh yeah!
 17:8:2023 | 22:48:51 @ >> [PawnScript] | LOG: So yeah!
 17:8:2023 | 22:48:51 @ >> [PawnScript] | LOG: You should always return a value!
 17:8:2023 | 22:48:51 @ >> [PawnScript] | LOG: This was again expected!
 17:8:2023 | 22:48:51 @ >> [PawnScript] | LOG: My namespace function works!
 17:8:2023 | 22:48:51 @ >> [PawnScript] | LOG: Hello World!
 17:8:2023 | 22:48:52 @ >> [PawnScript] | LOG: Try works!
 17:8:2023 | 22:48:56 @ >> [PawnScript] | LOG: Hello World again
 17:8:2023 | 22:48:56 @ >> [PawnScript] | LOG: 'j'
 17:8:2023 | 22:48:56 @ >> [PawnScript] | LOG: Hey
 17:8:2023 | 22:48:56 @ >> [PawnScript] | LOG: Lmao
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 23
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 0
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 23243
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: true
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: std::string works
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 23.243000
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 4323.243164
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 's'
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 74
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: 4308.519042
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: LMAO
 17:8:2023 | 22:48:57 @ >> [PawnScript] | LOG: This actually works!
 17:8:2023 | 22:48:58 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:48:59 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:49:0 @ >> [PawnScript] | LOG: 4
 17:8:2023 | 22:49:1 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 11:2:36 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 11:2:36 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 11:2:39 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 11:2:44 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:44 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:44 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:44 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:45 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:45 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:45 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:45 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:45 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:46 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 11:2:46 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 11:2:46 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:46 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:46 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:47 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 11:2:48 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 11:2:52 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 11:2:52 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 11:2:53 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 11:2:54 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 11:2:55 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: true
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 11:2:56 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 11:2:57 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 11:2:57 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 11:2:57 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 11:2:58 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 11:2:59 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 11:2:59 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 11:2:59 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: true
 18:8:2023 | 11:3:4 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 11:3:5 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 11:3:6 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 11:3:7 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:14:48 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 12:14:48 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 12:14:51 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 12:14:55 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:56 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:56 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:56 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:57 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:57 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:14:57 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 12:14:58 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:58 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:58 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:58 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:58 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 12:14:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:14:59 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 12:15:3 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 12:15:4 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 12:15:4 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:15:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 12:15:6 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 12:15:7 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 12:15:8 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 12:15:9 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 12:15:9 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 12:15:10 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 12:15:11 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 12:15:15 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 12:15:15 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 12:15:15 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 12:15:16 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 12:15:18 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:15:19 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:15:20 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:15:21 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:15:22 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:16:57 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 12:16:57 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 12:16:59 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 12:17:4 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:4 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:5 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:5 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:5 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:5 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:5 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:6 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:6 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:6 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:17:6 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 12:17:7 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:8 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:8 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:8 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:17:8 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 12:17:12 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 12:17:13 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 12:17:13 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:17:14 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 12:17:15 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 12:17:15 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 12:17:15 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 12:17:15 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 12:17:15 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 12:17:16 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 12:17:17 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 12:17:18 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 12:17:18 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 12:17:19 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 12:17:20 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 12:17:24 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 12:17:24 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 12:17:24 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 12:17:25 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 12:17:27 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:17:28 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:17:29 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:17:30 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:17:31 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:9 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 12:19:9 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 12:19:11 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 12:19:16 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:17 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:17 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:17 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:17 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:17 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:18 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:18 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:18 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:18 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:19:18 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 12:19:19 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:19 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:19 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:19 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:19 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 12:19:20 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:20 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:20 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:20 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:19:20 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 12:19:24 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 12:19:25 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 12:19:25 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:19:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 12:19:27 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 12:19:28 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 12:19:29 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 12:19:30 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 12:19:30 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 12:19:31 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 12:19:32 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 12:19:32 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:19:37 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 12:19:38 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 12:19:40 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:41 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:42 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:43 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:44 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:45 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:46 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:19:47 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:15 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 12:24:15 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 12:24:18 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 12:24:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:23 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:24:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 12:24:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:25 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:24:26 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 12:24:30 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 12:24:31 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 12:24:31 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:24:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 12:24:33 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 12:24:34 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 12:24:35 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 12:24:36 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 12:24:36 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 12:24:37 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 12:24:38 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 12:24:38 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 12:24:43 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 12:24:44 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 12:24:45 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 12:24:45 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 12:24:45 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 12:24:45 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 12:24:46 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:47 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:48 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:49 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:50 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:51 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:52 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:53 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:24:54 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 12:26:0 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 12:26:3 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:8 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:9 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:10 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 12:26:12 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 12:26:16 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 12:26:16 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:26:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 12:26:18 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 12:26:19 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 12:26:20 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 12:26:21 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 12:26:21 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 12:26:21 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 12:26:22 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 12:26:23 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 12:26:23 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 12:26:23 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: true
 18:8:2023 | 12:26:28 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 12:26:29 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 12:26:30 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 12:26:31 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:32 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:33 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:34 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 12:26:35 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:27:11 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:27:11 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:27:14 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:27:18 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:19 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:19 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:19 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:19 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:19 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:20 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:20 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:20 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:20 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:27:20 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:27:21 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:21 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:21 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:21 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:21 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:27:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:27:22 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:27:26 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:27:27 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:27:27 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:27:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:27:29 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:27:30 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 13:27:31 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 13:27:32 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 13:27:32 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 13:27:33 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 13:27:34 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 13:27:34 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 13:27:38 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 13:27:39 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 13:27:40 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 13:27:41 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 13:27:41 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 13:29:25 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:29:25 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:29:28 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:29:33 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:33 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:33 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:33 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:34 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:34 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:34 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:34 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:34 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:35 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:29:35 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:29:35 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:35 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:29:37 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:29:41 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:29:42 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:29:43 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:29:44 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 13:29:45 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:29:46 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 13:29:46 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 13:29:46 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 13:29:46 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 13:29:46 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 13:29:47 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 13:29:47 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 13:29:47 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 13:29:47 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 13:29:47 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 13:29:48 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 13:29:48 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 13:29:48 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 13:29:48 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:29:53 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 13:29:54 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 13:29:55 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 13:30:38 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:30:38 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:30:41 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:30:46 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:46 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:46 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:47 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:47 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:47 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:47 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:47 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:48 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:48 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:30:48 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:30:48 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:49 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:50 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:30:50 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:30:54 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:30:55 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:30:56 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:30:57 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:30:58 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 13:30:59 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 13:31:0 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 13:31:0 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 13:31:0 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 13:31:0 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 13:31:1 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 13:31:1 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 13:31:1 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 13:31:1 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 13:31:1 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 13:31:6 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 13:31:6 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 13:31:6 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 13:31:7 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 13:31:8 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 13:31:9 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:31:10 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:31:11 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:31:12 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:42:54 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:42:54 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:42:57 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:43:2 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:2 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:2 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:2 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:2 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:3 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:3 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:3 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:3 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:3 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:4 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:43:5 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:5 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:5 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:5 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:43:5 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:43:9 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:43:10 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:43:10 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:43:11 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:43:12 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:43:14 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:45:1 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:45:1 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:45:4 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:45:9 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:9 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:9 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:9 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:10 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:11 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:12 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:45:13 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:45:17 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:45:17 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:45:18 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:45:19 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:45:20 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 13:45:21 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 13:45:22 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 13:45:22 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 13:45:22 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 13:45:23 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 13:45:24 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 13:45:24 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 13:45:24 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:45:29 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 13:45:30 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 13:45:31 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 13:45:31 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 13:45:31 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 13:45:31 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 13:45:31 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 13:46:26 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 13:46:26 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 13:46:28 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 13:46:33 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:34 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:34 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:34 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:34 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:34 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:35 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:35 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:35 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:35 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 13:46:35 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 13:46:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:36 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:36 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 13:46:37 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:37 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:37 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:37 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 13:46:37 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 13:46:41 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 13:46:42 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 13:46:42 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 13:46:43 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 13:46:44 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 13:46:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 13:46:46 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 13:46:47 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 13:46:47 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 13:46:48 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 13:46:48 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 13:46:48 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 13:46:48 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 13:46:48 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 13:46:49 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 13:46:49 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 13:46:53 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: true
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 13:46:54 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 13:46:55 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 14:27:54 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:27:54 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:29:11 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:29:11 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:30:32 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:30:32 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:37:15 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:37:15 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:37:18 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 14:47:11 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:47:11 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:47:14 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 14:47:19 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:20 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:20 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:20 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:20 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:21 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:21 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:21 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:21 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:47:22 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 14:47:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:47:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:47:22 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:47:23 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:47:23 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 14:50:21 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 14:50:21 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 14:50:24 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 14:50:29 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:29 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:29 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:29 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:29 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:30 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:30 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:30 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:30 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:30 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 14:50:31 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 14:50:31 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:50:31 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:50:31 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:50:31 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 14:50:32 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 16:3:48 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 16:3:48 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 16:3:51 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 16:3:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:57 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:57 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:58 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:58 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:3:58 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 16:3:58 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:3:59 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:4:0 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:4:0 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 16:4:4 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 16:4:5 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 16:4:6 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 16:4:7 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 16:4:8 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 16:4:9 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 16:4:10 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 16:4:10 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 16:4:11 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 16:4:12 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 16:4:16 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 16:4:16 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 16:4:16 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 16:4:17 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 16:4:18 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 16:4:20 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:4:21 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:4:22 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:4:23 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:12:14 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 16:12:14 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 16:12:17 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 16:12:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:23 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:12:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 16:12:24 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:24 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:24 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:24 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:12:25 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 16:12:30 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 16:12:30 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:12:31 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 16:12:32 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 16:12:33 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 16:12:34 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 16:12:35 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 16:12:35 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 16:12:35 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 16:12:36 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 16:12:37 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 16:12:37 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 16:12:37 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 16:12:42 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 16:12:43 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 16:12:44 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 16:12:44 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 16:12:44 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 16:12:44 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 16:12:44 @ >> [PawnScript] | LOG: vector test #4 29
 18:8:2023 | 16:14:19 @ >> [PawnScript] | LOG: OMG actually works
 18:8:2023 | 16:14:19 @ >> [PawnScript] | LOG: ==========================================
 18:8:2023 | 16:14:22 @ >> [PawnScript] | LOG: Stack Works!
 18:8:2023 | 16:14:27 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:27 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:27 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:28 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:28 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:28 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:28 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:28 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:29 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:29 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 18:8:2023 | 16:14:29 @ >> [PawnScript] | LOG: This is still runnin right? 11
 18:8:2023 | 16:14:29 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:29 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:30 @ >> [PawnScript] | LOG: The inline finally works!
 18:8:2023 | 16:14:31 @ >> [PawnScript] | LOG: Tasks are working ig
 18:8:2023 | 16:14:35 @ >> [PawnScript] | LOG: 100
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: Printed: Method test #2
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 1
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 2
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 3
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 4
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: enum test included
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:14:36 @ >> [PawnScript] | LOG: 5
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: -1
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: Static works here
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: Imported 364
 18:8:2023 | 16:14:37 @ >> [PawnScript] | LOG: Imported true
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: Imported Hello World
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: Imported 0.363999
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: Imported 'D'
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: 827346
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: 364.234008
 18:8:2023 | 16:14:38 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: 9376216
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: 314.159271
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: 100000
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: 21.763599
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: 23746
 18:8:2023 | 16:14:39 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:14:40 @ >> [PawnScript] | LOG: #emit works!
 18:8:2023 | 16:14:40 @ >> [PawnScript] | LOG: 23.746000
 18:8:2023 | 16:14:40 @ >> [PawnScript] | LOG: 'K'
 18:8:2023 | 16:14:40 @ >> [PawnScript] | LOG: 'Z'
 18:8:2023 | 16:14:40 @ >> [PawnScript] | LOG: 364
 18:8:2023 | 16:14:41 @ >> [PawnScript] | LOG: No way this worked!
 18:8:2023 | 16:14:41 @ >> [PawnScript] | LOG: This has also worked...
 18:8:2023 | 16:14:41 @ >> [PawnScript] | LOG: Oh yeah!
 18:8:2023 | 16:14:41 @ >> [PawnScript] | LOG: So yeah!
 18:8:2023 | 16:14:41 @ >> [PawnScript] | LOG: You should always return a value!
 18:8:2023 | 16:14:42 @ >> [PawnScript] | LOG: This was again expected!
 18:8:2023 | 16:14:42 @ >> [PawnScript] | LOG: My namespace function works!
 18:8:2023 | 16:14:42 @ >> [PawnScript] | LOG: Hello World!
 18:8:2023 | 16:14:42 @ >> [PawnScript] | LOG: Try works!
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: Hello World again
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: 'j'
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: Hey
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: Lmao
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: 23
 18:8:2023 | 16:14:47 @ >> [PawnScript] | LOG: 0
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 23243
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: true
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: std::string works
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 23.243000
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 4323.243164
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 's'
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 74
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: 4308.519042
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: LMAO
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: This actually works!
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: vector.ps loaded
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: vector test #1 1
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: vector test #1 312
 18:8:2023 | 16:14:48 @ >> [PawnScript] | LOG: vector test #1 2
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #2 1
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #2 2
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #3 24
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #3 31
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #3 29
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #4 31
 18:8:2023 | 16:14:49 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 11:19:56 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 11:19:56 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 11:19:59 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 11:20:4 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:5 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:5 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:5 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:5 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:6 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:6 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:6 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:6 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:6 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:20:7 @ >> [PawnScript] | LOG: This is still runnin right? 11
 19:8:2023 | 11:20:7 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:7 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:7 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:8 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:20:9 @ >> [PawnScript] | LOG: Tasks are working ig
 19:8:2023 | 11:20:13 @ >> [PawnScript] | LOG: 100
 19:8:2023 | 11:20:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 19:8:2023 | 11:20:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 1
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 2
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 3
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: enum test included
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: -1
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 19:8:2023 | 11:20:15 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: Imported 364
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: Imported true
 19:8:2023 | 11:20:16 @ >> [PawnScript] | LOG: Imported Hello World
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: Imported 0.363999
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: Imported 'D'
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: 827346
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: 364.234008
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 19:8:2023 | 11:20:17 @ >> [PawnScript] | LOG: 9376216
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: 314.159271
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: 100000
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: 21.763599
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 19:8:2023 | 11:20:18 @ >> [PawnScript] | LOG: 23746
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: true
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: #emit works!
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: 23.746000
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: 'K'
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: 'Z'
 19:8:2023 | 11:20:19 @ >> [PawnScript] | LOG: 364
 19:8:2023 | 11:20:20 @ >> [PawnScript] | LOG: No way this worked!
 19:8:2023 | 11:20:20 @ >> [PawnScript] | LOG: This has also worked...
 19:8:2023 | 11:20:21 @ >> [PawnScript] | LOG: Oh yeah!
 19:8:2023 | 11:20:21 @ >> [PawnScript] | LOG: So yeah!
 19:8:2023 | 11:20:21 @ >> [PawnScript] | LOG: You should always return a value!
 19:8:2023 | 11:20:21 @ >> [PawnScript] | LOG: This was again expected!
 19:8:2023 | 11:20:21 @ >> [PawnScript] | LOG: My namespace function works!
 19:8:2023 | 11:20:22 @ >> [PawnScript] | LOG: Hello World!
 19:8:2023 | 11:20:22 @ >> [PawnScript] | LOG: Try works!
 19:8:2023 | 11:20:27 @ >> [PawnScript] | LOG: Hello World again
 19:8:2023 | 11:20:27 @ >> [PawnScript] | LOG: 'j'
 19:8:2023 | 11:20:27 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 11:20:27 @ >> [PawnScript] | LOG: Lmao
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 23
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 23243
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: true
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: std::string works
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 23.243000
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 4323.243164
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 's'
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 74
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: 4308.519042
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: LMAO
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: This actually works!
 19:8:2023 | 11:20:28 @ >> [PawnScript] | LOG: vector.ps loaded
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #1 1
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #1 312
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #1 2
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #2 1
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #2 2
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #3 24
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #3 31
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #3 29
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #4 31
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 11:20:29 @ >> [PawnScript] | LOG: 366
 19:8:2023 | 11:20:31 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:20:32 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:20:33 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:20:34 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:20:35 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 11:34:8 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 11:34:11 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:16 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:17 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:17 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:17 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:17 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:17 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:18 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:18 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 19:8:2023 | 11:34:18 @ >> [PawnScript] | LOG: This is still runnin right? 11
 19:8:2023 | 11:34:18 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:19 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:20 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 11:34:20 @ >> [PawnScript] | LOG: Tasks are working ig
 19:8:2023 | 11:34:24 @ >> [PawnScript] | LOG: 100
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: Printed: Method test #2
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: 1
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: 2
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: 3
 19:8:2023 | 11:34:25 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: enum test included
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: -1
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 19:8:2023 | 11:34:26 @ >> [PawnScript] | LOG: Imported 364
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: Imported true
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: Imported Hello World
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: Imported 0.363999
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: Imported 'D'
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: 827346
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: 364.234008
 19:8:2023 | 11:34:27 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: 9376216
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: 314.159271
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: 100000
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: 21.763599
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 19:8:2023 | 11:34:28 @ >> [PawnScript] | LOG: 23746
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: true
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: #emit works!
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: 23.746000
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: 'K'
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: 'Z'
 19:8:2023 | 11:34:29 @ >> [PawnScript] | LOG: 364
 19:8:2023 | 11:34:30 @ >> [PawnScript] | LOG: No way this worked!
 19:8:2023 | 11:34:30 @ >> [PawnScript] | LOG: This has also worked...
 19:8:2023 | 11:34:30 @ >> [PawnScript] | LOG: Oh yeah!
 19:8:2023 | 11:34:31 @ >> [PawnScript] | LOG: So yeah!
 19:8:2023 | 11:34:31 @ >> [PawnScript] | LOG: You should always return a value!
 19:8:2023 | 11:34:31 @ >> [PawnScript] | LOG: This was again expected!
 19:8:2023 | 11:34:31 @ >> [PawnScript] | LOG: My namespace function works!
 19:8:2023 | 11:34:31 @ >> [PawnScript] | LOG: Hello World!
 19:8:2023 | 11:34:32 @ >> [PawnScript] | LOG: Try works!
 19:8:2023 | 11:34:36 @ >> [PawnScript] | LOG: Hello World again
 19:8:2023 | 11:34:36 @ >> [PawnScript] | LOG: 'j'
 19:8:2023 | 11:34:36 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: Lmao
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 23
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 23243
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: true
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: std::string works
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 23.243000
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 4323.243164
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 's'
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 74
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: 4308.519042
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: LMAO
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: This actually works!
 19:8:2023 | 11:34:37 @ >> [PawnScript] | LOG: vector.ps loaded
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #1 1
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #1 312
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #1 2
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #2 1
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #2 2
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #3 24
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #3 31
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #3 29
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #4 31
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 11:34:38 @ >> [PawnScript] | LOG: 11
 19:8:2023 | 11:34:40 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:34:41 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 11:34:42 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 12:45:23 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 12:45:23 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 12:45:25 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 12:45:30 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:30 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:31 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:31 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:31 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:31 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:31 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:32 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:32 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:32 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 19:8:2023 | 12:45:32 @ >> [PawnScript] | LOG: This is still runnin right? 11
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:33 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:34 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:34 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 12:45:34 @ >> [PawnScript] | LOG: Tasks are working ig
 19:8:2023 | 12:45:38 @ >> [PawnScript] | LOG: 100
 19:8:2023 | 12:45:39 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 19:8:2023 | 12:45:39 @ >> [PawnScript] | LOG: Printed: Method test #2
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 1
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 2
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 3
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: enum test included
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: -1
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 12:45:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 19:8:2023 | 12:45:41 @ >> [PawnScript] | LOG: Imported 364
 19:8:2023 | 12:45:41 @ >> [PawnScript] | LOG: Imported true
 19:8:2023 | 12:45:41 @ >> [PawnScript] | LOG: Imported Hello World
 19:8:2023 | 12:45:41 @ >> [PawnScript] | LOG: Imported 0.363999
 19:8:2023 | 12:45:41 @ >> [PawnScript] | LOG: Imported 'D'
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 827346
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 364.234008
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 9376216
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 314.159271
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 100000
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: 21.763599
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 19:8:2023 | 12:45:42 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: 23746
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: true
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: #emit works!
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: 23.746000
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: 'K'
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: 'Z'
 19:8:2023 | 12:45:43 @ >> [PawnScript] | LOG: 364
 19:8:2023 | 12:45:44 @ >> [PawnScript] | LOG: No way this worked!
 19:8:2023 | 12:45:44 @ >> [PawnScript] | LOG: This has also worked...
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: Oh yeah!
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: So yeah!
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: You should always return a value!
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: This was again expected!
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: My namespace function works!
 19:8:2023 | 12:45:45 @ >> [PawnScript] | LOG: Hello World!
 19:8:2023 | 12:45:46 @ >> [PawnScript] | LOG: Try works!
 19:8:2023 | 12:45:50 @ >> [PawnScript] | LOG: Hello World again
 19:8:2023 | 12:45:50 @ >> [PawnScript] | LOG: 'j'
 19:8:2023 | 12:45:50 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: Lmao
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 23
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 23243
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: true
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: std::string works
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 23.243000
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 4323.243164
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 's'
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 74
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: 4308.519042
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: LMAO
 19:8:2023 | 12:45:51 @ >> [PawnScript] | LOG: This actually works!
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector.ps loaded
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #1 1
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #1 312
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #1 2
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #2 1
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #2 2
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #3 24
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #3 31
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #3 29
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #4 31
 19:8:2023 | 12:45:52 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 12:45:53 @ >> [PawnScript] | LOG: 11
 19:8:2023 | 12:45:53 @ >> [PawnScript] | LOG: temporaryvar is 300
 19:8:2023 | 12:45:53 @ >> [PawnScript] | LOG: temporaryvar is null
 19:8:2023 | 12:45:54 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 12:45:55 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 12:45:56 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 20:9:33 @ >> [PawnScript] | LOG: Hi
 19:8:2023 | 20:14:13 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:14:13 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:15:23 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:15:23 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:30:22 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:30:22 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:30:23 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:30:23 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:33:0 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:33:0 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:33:1 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:33:1 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:33:56 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:33:56 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:33:58 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:33:58 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:37:23 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:37:23 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:37:25 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:37:25 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:41:30 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:41:30 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:41:32 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:41:32 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:41:36 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 20:52:43 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 20:52:43 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 20:52:44 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:52:44 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 20:52:46 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 20:52:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:51 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:51 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:52 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:52 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:52 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:53 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:53 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 19:8:2023 | 20:52:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 19:8:2023 | 20:52:53 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 20:52:55 @ >> [PawnScript] | LOG: Tasks are working ig
 19:8:2023 | 20:52:59 @ >> [PawnScript] | LOG: 100
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: 1
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: 2
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: 3
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: enum test included
 19:8:2023 | 20:53:0 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: -1
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 19:8:2023 | 20:53:1 @ >> [PawnScript] | LOG: Imported 364
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: Imported true
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: Imported Hello World
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: Imported 0.363999
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: Imported 'D'
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: 827346
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: 364.234008
 19:8:2023 | 20:53:2 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: 9376216
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: 314.159271
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: 100000
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: 21.763599
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: 23746
 19:8:2023 | 20:53:3 @ >> [PawnScript] | LOG: true
 19:8:2023 | 20:53:4 @ >> [PawnScript] | LOG: #emit works!
 19:8:2023 | 20:53:4 @ >> [PawnScript] | LOG: 23.746000
 19:8:2023 | 20:53:4 @ >> [PawnScript] | LOG: 'K'
 19:8:2023 | 20:53:4 @ >> [PawnScript] | LOG: 'Z'
 19:8:2023 | 20:53:4 @ >> [PawnScript] | LOG: 364
 19:8:2023 | 20:53:5 @ >> [PawnScript] | LOG: No way this worked!
 19:8:2023 | 20:53:5 @ >> [PawnScript] | LOG: This has also worked...
 19:8:2023 | 20:53:5 @ >> [PawnScript] | LOG: Oh yeah!
 19:8:2023 | 20:53:5 @ >> [PawnScript] | LOG: So yeah!
 19:8:2023 | 20:53:5 @ >> [PawnScript] | LOG: You should always return a value!
 19:8:2023 | 20:53:6 @ >> [PawnScript] | LOG: This was again expected!
 19:8:2023 | 20:53:6 @ >> [PawnScript] | LOG: My namespace function works!
 19:8:2023 | 20:53:6 @ >> [PawnScript] | LOG: Hello World!
 19:8:2023 | 20:53:6 @ >> [PawnScript] | LOG: Try works!
 19:8:2023 | 20:53:11 @ >> [PawnScript] | LOG: Hello World again
 19:8:2023 | 20:53:11 @ >> [PawnScript] | LOG: 'j'
 19:8:2023 | 20:53:11 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 20:53:11 @ >> [PawnScript] | LOG: Lmao
 19:8:2023 | 20:53:11 @ >> [PawnScript] | LOG: 23
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 23243
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: true
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: std::string works
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 23.243000
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 4323.243164
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 's'
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 74
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: 4308.519042
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: LMAO
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: This actually works!
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: vector.ps loaded
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: vector test #1 1
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: vector test #1 312
 19:8:2023 | 20:53:12 @ >> [PawnScript] | LOG: vector test #1 2
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #2 1
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #2 2
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #3 24
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #3 31
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #3 29
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #4 31
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: 11
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: temporaryvar is 300
 19:8:2023 | 20:53:13 @ >> [PawnScript] | LOG: temporaryvar is null
 19:8:2023 | 20:53:15 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 20:53:16 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 20:53:17 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 20:53:18 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:38:43 @ >> [PawnScript] | LOG: OMG actually works
 19:8:2023 | 21:38:43 @ >> [PawnScript] | LOG: ==========================================
 19:8:2023 | 21:38:44 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 21:38:44 @ >> [PawnScript] | LOG: 'c'
 19:8:2023 | 21:38:46 @ >> [PawnScript] | LOG: Stack Works!
 19:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:51 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:52 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 19:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 19:8:2023 | 21:38:53 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:54 @ >> [PawnScript] | LOG: The inline finally works!
 19:8:2023 | 21:38:55 @ >> [PawnScript] | LOG: Tasks are working ig
 19:8:2023 | 21:38:59 @ >> [PawnScript] | LOG: 100
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 1
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 2
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 3
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: enum test included
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 21:39:0 @ >> [PawnScript] | LOG: 5
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: -1
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: Static works here
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: Imported 364
 19:8:2023 | 21:39:1 @ >> [PawnScript] | LOG: Imported true
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: Imported Hello World
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: Imported 0.363999
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: Imported 'D'
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: 827346
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: 364.234008
 19:8:2023 | 21:39:2 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: 9376216
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: 314.159271
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: 100000
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: 21.763599
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: 23746
 19:8:2023 | 21:39:3 @ >> [PawnScript] | LOG: true
 19:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: #emit works!
 19:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: 23.746000
 19:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: 'K'
 19:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: 'Z'
 19:8:2023 | 21:39:4 @ >> [PawnScript] | LOG: 364
 19:8:2023 | 21:39:5 @ >> [PawnScript] | LOG: No way this worked!
 19:8:2023 | 21:39:5 @ >> [PawnScript] | LOG: This has also worked...
 19:8:2023 | 21:39:5 @ >> [PawnScript] | LOG: Oh yeah!
 19:8:2023 | 21:39:5 @ >> [PawnScript] | LOG: So yeah!
 19:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: You should always return a value!
 19:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: This was again expected!
 19:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: My namespace function works!
 19:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: Hello World!
 19:8:2023 | 21:39:6 @ >> [PawnScript] | LOG: Try works!
 19:8:2023 | 21:39:11 @ >> [PawnScript] | LOG: Hello World again
 19:8:2023 | 21:39:11 @ >> [PawnScript] | LOG: 'j'
 19:8:2023 | 21:39:11 @ >> [PawnScript] | LOG: Hey
 19:8:2023 | 21:39:11 @ >> [PawnScript] | LOG: Lmao
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 23
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 0
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 23243
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: true
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: std::string works
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 23.243000
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 4323.243164
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 's'
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 74
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: 4308.519042
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: LMAO
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: This actually works!
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: vector.ps loaded
 19:8:2023 | 21:39:12 @ >> [PawnScript] | LOG: vector test #1 1
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #1 312
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #1 2
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #2 1
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #2 2
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #3 24
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #3 31
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #3 29
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #4 31
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: vector test #4 29
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: 11
 19:8:2023 | 21:39:13 @ >> [PawnScript] | LOG: temporaryvar is 300
 19:8:2023 | 21:39:14 @ >> [PawnScript] | LOG: temporaryvar is null
 19:8:2023 | 21:39:15 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:16 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:17 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:18 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:19 @ >> [PawnScript] | LOG: 4
 19:8:2023 | 21:39:20 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 17:46:21 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 17:46:21 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 17:46:22 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 17:46:22 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 17:46:24 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 17:46:29 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:29 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:30 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:30 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:30 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:30 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:31 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:31 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:31 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:31 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 17:46:31 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 17:46:32 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:32 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:32 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:32 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:32 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 17:46:33 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:33 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:33 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:33 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 17:46:33 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 17:46:38 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 17:46:39 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 17:46:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 17:46:41 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 17:46:41 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 17:46:41 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 17:46:41 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 17:46:41 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 17:46:42 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: true
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 17:46:43 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 17:46:44 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 17:46:44 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 17:46:45 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 17:46:46 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 17:46:46 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 17:46:46 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 17:46:51 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 17:46:51 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 17:46:51 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: true
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 17:46:52 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 17:46:53 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 17:46:54 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 17:46:54 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 17:46:54 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 17:46:54 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 17:46:55 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 17:46:56 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:35:20 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 18:35:20 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 18:35:21 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:35:21 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 18:35:23 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 18:35:28 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:28 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:28 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:28 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:28 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:29 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:29 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:29 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:29 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:29 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:30 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 18:35:31 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:31 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:31 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:31 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:35:31 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 18:35:35 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 18:35:36 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 18:35:36 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 18:35:38 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 18:35:40 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 18:35:41 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 18:35:41 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 18:35:41 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 18:35:42 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 18:35:43 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 18:35:43 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 18:35:43 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 18:35:48 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 18:35:49 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 18:35:50 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 18:35:52 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:39:46 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 18:39:46 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 18:39:47 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:39:47 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 18:39:49 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 18:39:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:54 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:54 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:54 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:54 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:55 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:55 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:55 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:55 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:55 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:56 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 18:39:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:39:57 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 18:40:1 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 18:40:2 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 18:40:2 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:40:3 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 18:40:4 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 18:40:5 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 18:40:6 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 18:40:7 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 18:40:7 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 18:40:7 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 18:40:8 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 18:40:9 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 18:40:9 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 18:40:9 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:40:14 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 18:40:15 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 18:40:16 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 18:40:17 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:42:30 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 18:42:30 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 18:42:31 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:42:31 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 18:42:32 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:38 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:38 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 18:42:40 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:40 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:40 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:40 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 18:42:41 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:41 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:41 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:41 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 18:42:41 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 18:42:49 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 18:42:50 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 18:42:51 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 18:42:51 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 18:42:53 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 18:42:53 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: true
 20:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 18:43:1 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:43:2 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 18:43:3 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:12:46 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 19:12:46 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 19:12:47 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:12:47 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 19:12:49 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 19:12:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:54 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:54 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:55 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:55 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:55 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:55 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:55 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:56 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:56 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:12:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 19:12:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:56 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:57 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:12:58 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 19:13:2 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 19:13:3 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 19:13:3 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 19:17:6 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 19:17:6 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 19:17:7 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:17:7 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 19:17:8 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 19:17:13 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:14 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:14 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:14 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:14 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:15 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:15 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:15 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:17:15 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 19:17:16 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:17 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:17 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:17 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:17:17 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 19:17:21 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 19:17:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 19:17:22 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 19:18:44 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 19:18:44 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 19:18:45 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:18:45 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 19:18:46 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 19:18:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:52 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:52 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:52 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:53 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:53 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:53 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:53 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:18:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 19:18:54 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:55 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:55 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:55 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:18:55 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 19:18:59 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 19:19:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 19:19:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 19:19:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 19:19:2 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 19:19:3 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: true
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 19:19:4 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 19:19:5 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 19:19:5 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 19:19:6 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 19:19:7 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 19:19:7 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 19:19:7 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: true
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 19:19:12 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 19:19:13 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 19:19:14 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 19:19:15 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:16 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:17 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:18 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:19 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:20 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:19:21 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:29:54 @ >> [PawnScript] | LOG: OMG actually works
 20:8:2023 | 19:29:54 @ >> [PawnScript] | LOG: ==========================================
 20:8:2023 | 19:29:56 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:29:56 @ >> [PawnScript] | LOG: 'c'
 20:8:2023 | 19:29:57 @ >> [PawnScript] | LOG: Stack Works!
 20:8:2023 | 19:30:2 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:3 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:3 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:3 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:3 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:4 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:4 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:4 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:4 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:4 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: This is still runnin right? 11
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:5 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 20:8:2023 | 19:30:6 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:6 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:6 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:6 @ >> [PawnScript] | LOG: The inline finally works!
 20:8:2023 | 19:30:6 @ >> [PawnScript] | LOG: Tasks are working ig
 20:8:2023 | 19:30:11 @ >> [PawnScript] | LOG: 100
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: Printed: Method test #2
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: 1
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: 2
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: 3
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: enum test included
 20:8:2023 | 19:30:12 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: 5
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: -1
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: Static works here
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 20:8:2023 | 19:30:13 @ >> [PawnScript] | LOG: Imported 364
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: Imported true
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: Imported Hello World
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: Imported 0.363999
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: Imported 'D'
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: 827346
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: 364.234008
 20:8:2023 | 19:30:14 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: 9376216
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: 314.159271
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: 100000
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: 21.763599
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 20:8:2023 | 19:30:15 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: 23746
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: true
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: #emit works!
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: 23.746000
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: 'K'
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: 'Z'
 20:8:2023 | 19:30:16 @ >> [PawnScript] | LOG: 364
 20:8:2023 | 19:30:17 @ >> [PawnScript] | LOG: No way this worked!
 20:8:2023 | 19:30:17 @ >> [PawnScript] | LOG: This has also worked...
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: Oh yeah!
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: So yeah!
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: You should always return a value!
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: This was again expected!
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: My namespace function works!
 20:8:2023 | 19:30:18 @ >> [PawnScript] | LOG: Hello World!
 20:8:2023 | 19:30:19 @ >> [PawnScript] | LOG: Try works!
 20:8:2023 | 19:30:23 @ >> [PawnScript] | LOG: Hello World again
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 'j'
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: Hey
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: Lmao
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 23
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 0
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 23243
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: true
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: std::string works
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 23.243000
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 4323.243164
 20:8:2023 | 19:30:24 @ >> [PawnScript] | LOG: 's'
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: 74
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: 4308.519042
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: LMAO
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: This actually works!
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector.ps loaded
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #1 1
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #1 312
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #1 2
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #2 1
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #2 2
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #3 24
 20:8:2023 | 19:30:25 @ >> [PawnScript] | LOG: vector test #3 31
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: vector test #3 29
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: vector test #4 31
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: vector test #4 29
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: 11
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: temporaryvar is 300
 20:8:2023 | 19:30:26 @ >> [PawnScript] | LOG: temporaryvar is null
 20:8:2023 | 19:30:27 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:28 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:29 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:30 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:31 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:32 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:33 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:34 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:35 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:36 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 20:8:2023 | 19:30:36 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:37 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:38 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:39 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:40 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:41 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:42 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:43 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:44 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:45 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:46 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:47 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:48 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:49 @ >> [PawnScript] | LOG: 4
 20:8:2023 | 19:30:50 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:13:15 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:13:15 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:13:16 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:13:16 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:13:16 @ >> [PawnScript] | LOG: 1==1
 21:8:2023 | 13:13:16 @ >> [PawnScript] | LOG: 1!=1
 21:8:2023 | 13:13:16 @ >> [PawnScript] | LOG: 1<=1
 21:8:2023 | 13:13:17 @ >> [PawnScript] | LOG: 2>=1
 21:8:2023 | 13:13:17 @ >> [PawnScript] | LOG: 2>1
 21:8:2023 | 13:13:17 @ >> [PawnScript] | LOG: 1<1
 21:8:2023 | 13:17:29 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:17:29 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 1==1
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 1!=1
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 1<=1
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 2>=1
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 2>1
 21:8:2023 | 13:17:31 @ >> [PawnScript] | LOG: 1<1
 21:8:2023 | 13:21:44 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:21:44 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:21:46 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:21:46 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:21:46 @ >> [PawnScript] | LOG: null
 21:8:2023 | 13:23:6 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:23:7 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:23:8 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:23:8 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:23:8 @ >> [PawnScript] | LOG: 1
 21:8:2023 | 13:25:32 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:25:32 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:25:33 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:25:33 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:25:34 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:28:34 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:28:34 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:28:35 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:28:35 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:28:35 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:28:36 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:30:37 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:30:37 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:30:39 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:30:39 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:30:39 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:30:39 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:33:0 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:33:0 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:33:2 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:33:2 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:33:2 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:33:2 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:42:59 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:42:59 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:43:13 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:43:14 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:43:17 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:43:18 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:47:42 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:47:42 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:47:43 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1>=1: 1
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1<=2: 1
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1<2: 1
 21:8:2023 | 13:47:44 @ >> [PawnScript] | LOG: 1>2: 0
 21:8:2023 | 13:48:28 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:48:28 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:48:29 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:48:29 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:48:29 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:48:29 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:48:30 @ >> [PawnScript] | LOG: 1>=1: 1
 21:8:2023 | 13:48:30 @ >> [PawnScript] | LOG: 1<=2: 1
 21:8:2023 | 13:48:30 @ >> [PawnScript] | LOG: 1<2: 1
 21:8:2023 | 13:48:30 @ >> [PawnScript] | LOG: 1>2: 0
 21:8:2023 | 13:48:31 @ >> [PawnScript] | LOG: Stack Works!
 21:8:2023 | 13:49:10 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:49:10 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1>=1: 1
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1<=2: 1
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1<2: 1
 21:8:2023 | 13:49:11 @ >> [PawnScript] | LOG: 1>2: 0
 21:8:2023 | 13:49:13 @ >> [PawnScript] | LOG: Stack Works!
 21:8:2023 | 13:49:18 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:18 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:19 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:19 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:19 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:19 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:19 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:20 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:20 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:20 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:49:20 @ >> [PawnScript] | LOG: This is still runnin right? 11
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 21:8:2023 | 13:49:21 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:22 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:22 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:22 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:49:22 @ >> [PawnScript] | LOG: Tasks are working ig
 21:8:2023 | 13:49:26 @ >> [PawnScript] | LOG: 100
 21:8:2023 | 13:49:27 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 21:8:2023 | 13:49:27 @ >> [PawnScript] | LOG: Printed: Method test #2
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 1
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 2
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 3
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: enum test included
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 5
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 5
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: -1
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: 0
 21:8:2023 | 13:49:28 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: Static works here
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: Static works here
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: Imported 364
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: Imported true
 21:8:2023 | 13:49:29 @ >> [PawnScript] | LOG: Imported Hello World
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: Imported 0.363999
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: Imported 'D'
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: 827346
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: 364.234008
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: 9376216
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: 314.159271
 21:8:2023 | 13:49:30 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: 100000
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: 21.763599
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: 23746
 21:8:2023 | 13:49:31 @ >> [PawnScript] | LOG: true
 21:8:2023 | 13:49:32 @ >> [PawnScript] | LOG: #emit works!
 21:8:2023 | 13:49:32 @ >> [PawnScript] | LOG: 23.746000
 21:8:2023 | 13:49:32 @ >> [PawnScript] | LOG: 'K'
 21:8:2023 | 13:49:32 @ >> [PawnScript] | LOG: 'Z'
 21:8:2023 | 13:49:32 @ >> [PawnScript] | LOG: 364
 21:8:2023 | 13:49:33 @ >> [PawnScript] | LOG: No way this worked!
 21:8:2023 | 13:49:33 @ >> [PawnScript] | LOG: This has also worked...
 21:8:2023 | 13:49:33 @ >> [PawnScript] | LOG: Oh yeah!
 21:8:2023 | 13:49:33 @ >> [PawnScript] | LOG: So yeah!
 21:8:2023 | 13:49:34 @ >> [PawnScript] | LOG: You should always return a value!
 21:8:2023 | 13:49:34 @ >> [PawnScript] | LOG: This was again expected!
 21:8:2023 | 13:49:34 @ >> [PawnScript] | LOG: My namespace function works!
 21:8:2023 | 13:49:34 @ >> [PawnScript] | LOG: Hello World!
 21:8:2023 | 13:49:34 @ >> [PawnScript] | LOG: Try works!
 21:8:2023 | 13:49:39 @ >> [PawnScript] | LOG: Hello World again
 21:8:2023 | 13:49:39 @ >> [PawnScript] | LOG: 'j'
 21:8:2023 | 13:49:39 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: Lmao
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 23
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 0
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 23243
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: true
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: std::string works
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 23.243000
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 4323.243164
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 's'
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 74
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: 4308.519042
 21:8:2023 | 13:49:40 @ >> [PawnScript] | LOG: LMAO
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: This actually works!
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector.ps loaded
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #1 1
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #1 312
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #1 2
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #2 1
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #2 2
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #3 24
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #3 31
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #3 29
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #4 31
 21:8:2023 | 13:49:41 @ >> [PawnScript] | LOG: vector test #4 29
 21:8:2023 | 13:49:42 @ >> [PawnScript] | LOG: 11
 21:8:2023 | 13:49:42 @ >> [PawnScript] | LOG: temporaryvar is 300
 21:8:2023 | 13:49:42 @ >> [PawnScript] | LOG: temporaryvar is null
 21:8:2023 | 13:49:43 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:44 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:45 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:46 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:47 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:48 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:49 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:50 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:51 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:49:52 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 21:8:2023 | 13:49:52 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 13:59:13 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 13:59:13 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 13:59:14 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 13:59:14 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 13:59:14 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 13:59:14 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 13:59:14 @ >> [PawnScript] | LOG: 1>=1: 1
 21:8:2023 | 13:59:15 @ >> [PawnScript] | LOG: 1<=2: 1
 21:8:2023 | 13:59:15 @ >> [PawnScript] | LOG: 1<2: 1
 21:8:2023 | 13:59:15 @ >> [PawnScript] | LOG: 1>2: 0
 21:8:2023 | 13:59:17 @ >> [PawnScript] | LOG: Stack Works!
 21:8:2023 | 13:59:22 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:23 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:23 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:24 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 21:8:2023 | 13:59:24 @ >> [PawnScript] | LOG: This is still runnin right? 11
 21:8:2023 | 13:59:24 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:24 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 13:59:25 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:41 @ >> [PawnScript] | LOG: OMG actually works
 21:8:2023 | 14:2:41 @ >> [PawnScript] | LOG: ==========================================
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 'c'
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1==1: 1
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1!=1: 0
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1>=1: 1
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1<=2: 1
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1<2: 1
 21:8:2023 | 14:2:42 @ >> [PawnScript] | LOG: 1>2: 0
 21:8:2023 | 14:2:44 @ >> [PawnScript] | LOG: Stack Works!
 21:8:2023 | 14:2:50 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:50 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:50 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:50 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:50 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:51 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:51 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:51 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:51 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:51 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 21:8:2023 | 14:2:52 @ >> [PawnScript] | LOG: This is still runnin right? 11
 21:8:2023 | 14:2:52 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:52 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:52 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:52 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:53 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 21:8:2023 | 14:2:53 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:53 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:53 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:53 @ >> [PawnScript] | LOG: The inline finally works!
 21:8:2023 | 14:2:54 @ >> [PawnScript] | LOG: Tasks are working ig
 21:8:2023 | 14:2:58 @ >> [PawnScript] | LOG: 100
 21:8:2023 | 14:2:59 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 21:8:2023 | 14:2:59 @ >> [PawnScript] | LOG: Printed: Method test #2
 21:8:2023 | 14:2:59 @ >> [PawnScript] | LOG: 1
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 2
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 3
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: enum test included
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 5
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 5
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: -1
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: 0
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: Static works here
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: Static works here
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 21:8:2023 | 14:3:0 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 21:8:2023 | 14:3:1 @ >> [PawnScript] | LOG: Imported 364
 21:8:2023 | 14:3:1 @ >> [PawnScript] | LOG: Imported true
 21:8:2023 | 14:3:1 @ >> [PawnScript] | LOG: Imported Hello World
 21:8:2023 | 14:3:1 @ >> [PawnScript] | LOG: Imported 0.363999
 21:8:2023 | 14:3:1 @ >> [PawnScript] | LOG: Imported 'D'
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 827346
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 364.234008
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 9376216
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 314.159271
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 100000
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: 21.763599
 21:8:2023 | 14:3:2 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: 23746
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: true
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: #emit works!
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: 23.746000
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: 'K'
 21:8:2023 | 14:3:3 @ >> [PawnScript] | LOG: 'Z'
 21:8:2023 | 14:3:4 @ >> [PawnScript] | LOG: 364
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: No way this worked!
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: This has also worked...
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: Oh yeah!
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: So yeah!
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: You should always return a value!
 21:8:2023 | 14:3:5 @ >> [PawnScript] | LOG: This was again expected!
 21:8:2023 | 14:3:6 @ >> [PawnScript] | LOG: My namespace function works!
 21:8:2023 | 14:3:6 @ >> [PawnScript] | LOG: Hello World!
 21:8:2023 | 14:3:6 @ >> [PawnScript] | LOG: Try works!
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: Hello World again
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: 'j'
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: Hey
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: Lmao
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: 23
 21:8:2023 | 14:3:11 @ >> [PawnScript] | LOG: 0
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 23243
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: true
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: std::string works
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 23.243000
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 4323.243164
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 's'
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 74
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: 4308.519042
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: LMAO
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: This actually works!
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: vector.ps loaded
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: vector test #1 1
 21:8:2023 | 14:3:12 @ >> [PawnScript] | LOG: vector test #1 312
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #1 2
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #2 1
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #2 2
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #3 24
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #3 31
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #3 29
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #4 31
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: vector test #4 29
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: 11
 21:8:2023 | 14:3:13 @ >> [PawnScript] | LOG: temporaryvar is 300
 21:8:2023 | 14:3:14 @ >> [PawnScript] | LOG: temporaryvar is null
 21:8:2023 | 14:3:15 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:16 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:17 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:18 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:19 @ >> [PawnScript] | LOG: 4
 21:8:2023 | 14:3:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:6:12 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:6:12 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:6:13 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:6:13 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:6:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:6:16 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:6:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:22 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:23 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:6:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:6:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:6:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:6:25 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:6:30 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:7:12 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:7:12 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:7:13 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:7:13 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:7:13 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:7:13 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:7:13 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:7:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:7:16 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:7:21 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:21 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:22 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:22 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:22 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:22 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:22 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:23 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:23 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:23 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:7:23 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:7:24 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:25 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:7:25 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:7:30 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:7:30 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:7:31 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:8:17 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:8:17 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:8:18 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:8:19 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:8:21 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:8:26 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:27 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:27 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:27 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:27 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:27 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:28 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:28 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:28 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:28 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:8:29 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:8:29 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:29 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:29 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:29 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:30 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:8:30 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:30 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:30 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:30 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:8:31 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:8:35 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:8:36 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:8:36 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:8:37 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:8:38 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:8:39 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:8:40 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:8:41 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:8:43 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:8:44 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:8:44 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:8:44 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:8:49 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:8:49 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:8:49 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:8:50 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:8:51 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:9:39 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:9:39 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:9:41 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:9:43 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:9:48 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:49 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:49 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:49 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:49 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:49 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:50 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:50 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:50 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:50 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:9:50 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:9:51 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:51 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:51 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:51 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:51 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:9:52 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:52 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:52 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:52 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:9:52 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:9:57 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:9:57 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:9:58 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:9:59 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:10:0 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:10:1 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:10:2 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:10:3 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:10:3 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:10:4 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:10:4 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:10:4 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:10:4 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:10:4 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:10:5 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:10:5 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:10:10 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:10:11 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:10:12 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:10:13 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:14 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:15 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:16 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:19 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:10:21 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:24:42 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:24:42 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:24:43 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:24:43 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:24:43 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:24:44 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:24:46 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:24:51 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:51 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:51 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:52 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:52 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:52 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:52 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:53 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:53 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:53 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:24:53 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:55 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:55 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:24:55 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:24:59 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:25:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:25:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:25:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:25:2 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:25:3 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:25:4 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:25:5 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:25:5 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:25:5 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:25:5 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:25:5 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:25:6 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:25:6 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:25:6 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:25:6 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:25:7 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:25:7 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:25:7 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:25:7 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:25:8 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:25:12 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:25:13 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:25:14 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:25:15 @ >> [PawnScript] | LOG: Hey uh omg
 25:8:2023 | 16:25:16 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:19 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:21 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:22 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:23 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:24 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:25 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 16:25:25 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:26 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:27 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:28 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:25:29 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:34:26 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:34:26 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:34:27 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:34:28 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:34:30 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:34:35 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:35 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:35 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:36 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:36 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:36 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:36 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:36 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:37 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:37 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:34:37 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:34:37 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:37 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:38 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:34:39 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:34:43 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:34:44 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:34:44 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:34:45 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:34:46 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:34:47 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:34:48 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:34:49 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:34:49 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:34:49 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:34:50 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:34:50 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:34:50 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:34:50 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:34:50 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:34:51 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:34:51 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:34:51 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:34:51 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:34:56 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:34:56 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:34:56 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:34:57 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:34:58 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:34:59 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:34:59 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:34:59 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:35:0 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:35:1 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:45:53 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:45:53 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:45:55 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:45:56 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:45:56 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:45:56 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:45:56 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:45:58 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:46:4 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:4 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:4 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:4 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:4 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:5 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:5 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:5 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:5 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:5 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:46:6 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:46:6 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:6 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:6 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:7 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:46:8 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:46:13 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:46:14 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:46:14 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:46:14 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:46:14 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:46:15 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:46:16 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:46:16 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:46:16 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:46:16 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:46:17 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:46:18 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:46:19 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:46:19 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:46:19 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:46:19 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:46:19 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:46:20 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:46:20 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:46:21 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:46:21 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:46:21 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:46:21 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:46:21 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:46:22 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:46:22 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:46:27 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:46:27 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:46:27 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:46:28 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:46:29 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:46:30 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:46:30 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:46:30 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:46:30 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:46:30 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:46:31 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:32 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:33 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:34 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:35 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:36 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:37 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:38 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:39 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:40 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 16:46:40 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:41 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:42 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:43 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:44 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:45 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:46 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:47 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:48 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:49 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:50 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:51 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:52 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:46:53 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:49:46 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:49:46 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:49:48 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:49:49 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:49:51 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:50:40 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:50:40 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:50:41 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:50:41 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:50:42 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:50:44 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:50:50 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:50 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:50 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:51 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:51 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:51 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:51 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:51 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:52 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:52 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:50:52 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:53 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:54 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:50:54 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:50:59 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:51:0 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:51:0 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:51:1 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:51:2 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:51:3 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:51:4 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:51:5 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:51:5 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:51:5 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:51:5 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:51:5 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:51:6 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:51:6 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:51:7 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:51:7 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:51:7 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:51:7 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:51:7 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:51:8 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:51:8 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:51:13 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:51:13 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:51:13 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:51:14 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:51:15 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:51:16 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:51:16 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:51:16 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:51:16 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:51:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:19 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:21 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:22 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:23 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:24 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:25 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:51:26 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 16:51:26 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:52:31 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:52:31 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:52:32 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:52:33 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:52:33 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:52:33 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:52:33 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:52:33 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:52:35 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:52:40 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:41 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:41 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:41 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:41 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:42 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:42 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:42 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:42 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:42 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:52:43 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:52:43 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:43 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:43 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:44 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:52:45 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:52:49 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:52:50 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:52:51 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:52:52 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:52:53 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:52:53 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:52:53 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:52:53 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:52:53 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:52:54 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:52:55 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:52:56 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:52:56 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:52:57 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:52:57 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:52:57 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:52:57 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:52:58 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:52:58 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:52:58 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:52:58 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:52:58 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:53:4 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:53:5 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:53:6 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:53:7 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:53:8 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:9 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:10 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:11 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:12 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:13 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:14 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:15 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:16 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:17 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 16:53:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:19 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:21 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:53:22 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:57:57 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 16:57:57 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:57:59 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:58:0 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:58:1 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 16:58:7 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:7 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:7 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:7 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:7 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:8 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:8 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:8 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:8 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:8 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 16:58:9 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 16:58:9 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:9 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:9 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:9 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:10 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 16:58:10 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:10 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:10 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:10 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 16:58:11 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 16:58:15 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 16:58:16 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 16:58:16 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 16:58:17 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 16:58:18 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 16:58:18 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 16:58:18 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 16:58:18 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 16:58:18 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 16:58:19 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 16:58:20 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 16:58:21 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 16:58:21 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 16:58:22 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 16:58:23 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 16:58:23 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 16:58:23 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 16:58:28 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 16:58:28 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 16:58:28 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 16:58:28 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 16:58:28 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: true
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 16:58:29 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 16:58:30 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 16:58:31 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 16:58:31 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 16:58:32 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:33 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:34 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:35 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:36 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:37 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:38 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:39 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:40 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:41 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 16:58:41 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:42 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:43 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:44 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:45 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:46 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:47 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:48 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:49 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:50 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:51 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:52 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:53 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:54 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 16:58:55 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:2 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 17:2:2 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 17:2:3 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:2:4 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:2:6 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 17:2:11 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:11 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:11 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:12 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:12 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:12 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:12 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:12 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:13 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:13 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:2:13 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 17:2:13 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:14 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:15 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:2:15 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 17:2:19 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 17:2:20 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 17:2:20 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 17:2:21 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 17:2:22 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 17:2:23 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 17:2:24 @ >> [PawnScript] | LOG: true
 25:8:2023 | 17:2:25 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 17:2:25 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 17:2:25 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 17:2:25 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 17:2:25 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 17:2:26 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 17:2:26 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 17:2:26 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 17:2:26 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 17:2:27 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 17:2:27 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 17:2:27 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 17:2:27 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 17:2:27 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 17:2:32 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: true
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 17:2:33 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 17:2:34 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 17:2:35 @ >> [PawnScript] | LOG: Test?
 25:8:2023 | 17:2:36 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:37 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:38 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:39 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:40 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:41 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:42 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:43 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:44 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:45 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 17:2:45 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:46 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:47 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:48 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:2:49 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:4 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 17:26:4 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 17:26:5 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 17:26:5 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 17:26:5 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 17:26:5 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:26:6 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:26:8 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 17:26:13 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:13 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:14 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:14 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:14 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:14 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:14 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:15 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:15 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:15 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 17:26:15 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:16 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:17 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:17 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 17:26:17 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 17:26:21 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 17:26:22 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 17:26:23 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 17:26:24 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 17:26:25 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 17:26:26 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: true
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 17:26:27 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 17:26:28 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 17:26:28 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 17:26:29 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 17:26:29 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 17:26:29 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 17:26:29 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 17:26:29 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 17:26:30 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 17:26:30 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: true
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 17:26:35 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 17:26:36 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: Test?
 25:8:2023 | 17:26:37 @ >> [PawnScript] | LOG: 1 is less than 2
 25:8:2023 | 17:26:38 @ >> [PawnScript] | LOG: Thanks God
 25:8:2023 | 17:26:39 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:40 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:41 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:42 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:43 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:44 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:45 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:46 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:47 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:48 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 17:26:48 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:49 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:50 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 17:26:51 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:35:35 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 18:35:35 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 18:35:36 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:35:36 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:35:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:35:39 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 18:35:44 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:45 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:45 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:45 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:45 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:45 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:46 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:46 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:46 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:46 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:35:46 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 18:35:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:35:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:35:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:35:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:35:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 18:42:35 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 18:42:35 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 18:42:36 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:42:36 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 18:42:36 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 18:42:36 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:42:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:42:39 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 18:42:44 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:44 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:45 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:42:46 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:42:48 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 18:42:52 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 18:42:53 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 18:42:54 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 18:42:55 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 18:42:56 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 18:42:57 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: true
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 18:42:58 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 18:42:59 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 18:43:0 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 18:43:1 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 18:43:1 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 18:43:6 @ >> [PawnScript] | LOG: true
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 18:43:7 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 18:43:8 @ >> [PawnScript] | LOG: Test?
 25:8:2023 | 18:43:10 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:10 @ >> [PawnScript] | LOG: Hi
 25:8:2023 | 18:43:11 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:12 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:13 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:14 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:15 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:16 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:43:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:53:9 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 18:53:9 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 18:53:10 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:53:10 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 18:53:10 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:53:11 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:53:13 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 18:53:19 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:19 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:20 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:20 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:20 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:20 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:53:21 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:28 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 18:54:28 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 18:54:29 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:54:30 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:54:30 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:54:30 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:54:30 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:54:32 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 18:54:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:38 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:39 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:39 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:54:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:40 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:54:41 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:35 @ >> [PawnScript] | LOG: OMG actually works
 25:8:2023 | 18:55:35 @ >> [PawnScript] | LOG: ==========================================
 25:8:2023 | 18:55:36 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:55:36 @ >> [PawnScript] | LOG: 'c'
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1==1: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1!=1: 0
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1>=1: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1<=2: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1<2: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1>2: 0
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:55:37 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:55:39 @ >> [PawnScript] | LOG: Stack Works!
 25:8:2023 | 18:55:44 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:44 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:44 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:45 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:45 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:45 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:45 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:46 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:46 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:46 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 25:8:2023 | 18:55:46 @ >> [PawnScript] | LOG: This is still runnin right? 11
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:47 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:48 @ >> [PawnScript] | LOG: The inline finally works!
 25:8:2023 | 18:55:48 @ >> [PawnScript] | LOG: Tasks are working ig
 25:8:2023 | 18:55:52 @ >> [PawnScript] | LOG: 100
 25:8:2023 | 18:55:53 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 25:8:2023 | 18:55:53 @ >> [PawnScript] | LOG: Printed: Method test #2
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 1
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 2
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 3
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: enum test included
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 5
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: -1
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:55:54 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: Static works here
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: Imported 364
 25:8:2023 | 18:55:55 @ >> [PawnScript] | LOG: Imported true
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: Imported Hello World
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: Imported 0.363999
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: Imported 'D'
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: 827346
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: 364.234008
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: 9376216
 25:8:2023 | 18:55:56 @ >> [PawnScript] | LOG: 314.159271
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: 100000
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: 21.763599
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: 23746
 25:8:2023 | 18:55:57 @ >> [PawnScript] | LOG: true
 25:8:2023 | 18:55:58 @ >> [PawnScript] | LOG: #emit works!
 25:8:2023 | 18:55:58 @ >> [PawnScript] | LOG: 23.746000
 25:8:2023 | 18:55:58 @ >> [PawnScript] | LOG: 'K'
 25:8:2023 | 18:55:58 @ >> [PawnScript] | LOG: 'Z'
 25:8:2023 | 18:55:58 @ >> [PawnScript] | LOG: 364
 25:8:2023 | 18:55:59 @ >> [PawnScript] | LOG: No way this worked!
 25:8:2023 | 18:55:59 @ >> [PawnScript] | LOG: This has also worked...
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: Oh yeah!
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: So yeah!
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: You should always return a value!
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: This was again expected!
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: My namespace function works!
 25:8:2023 | 18:56:0 @ >> [PawnScript] | LOG: Hello World!
 25:8:2023 | 18:56:1 @ >> [PawnScript] | LOG: Try works!
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: Hello World again
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: 'j'
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: Hey
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: Lmao
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: 23
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: 0
 25:8:2023 | 18:56:6 @ >> [PawnScript] | LOG: 23243
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: true
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: std::string works
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: 23.243000
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: 4323.243164
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: 's'
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: 74
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: 4308.519042
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: LMAO
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: This actually works!
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: vector.ps loaded
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: vector test #1 1
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: vector test #1 312
 25:8:2023 | 18:56:7 @ >> [PawnScript] | LOG: vector test #1 2
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #2 1
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #2 2
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #3 24
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #3 31
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #3 29
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #4 31
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: vector test #4 29
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: 11
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: temporaryvar is 300
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: temporaryvar is null
 25:8:2023 | 18:56:8 @ >> [PawnScript] | LOG: Test?
 25:8:2023 | 18:56:10 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:10 @ >> [PawnScript] | LOG: Hi
 25:8:2023 | 18:56:11 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:12 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:13 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:14 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:15 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:16 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:17 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:18 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:19 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 25:8:2023 | 18:56:19 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:20 @ >> [PawnScript] | LOG: 4
 25:8:2023 | 18:56:21 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 13:59:38 @ >> [PawnScript] | LOG: OMG actually works
 29:8:2023 | 13:59:38 @ >> [PawnScript] | LOG: ==========================================
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 'c'
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1==1: 1
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1!=1: 0
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1>=1: 1
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1<=2: 1
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1<2: 1
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1>2: 0
 29:8:2023 | 13:59:39 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 13:59:40 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 13:59:40 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 13:59:40 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 13:59:40 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 13:59:40 @ >> [PawnScript] | LOG: 13
 29:8:2023 | 13:59:42 @ >> [PawnScript] | LOG: Stack Works!
 29:8:2023 | 13:59:47 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:47 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:47 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:48 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:8:2023 | 13:59:49 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:50 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 13:59:51 @ >> [PawnScript] | LOG: Tasks are working ig
 29:8:2023 | 15:36:11 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 29:8:2023 | 15:36:12 @ >> [PawnScript] | LOG: OMG actually works
 29:8:2023 | 15:36:12 @ >> [PawnScript] | LOG: ==========================================
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 'c'
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1==1: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1!=1: 0
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1>=1: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1<=2: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1<2: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1>2: 0
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:36:14 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:36:15 @ >> [PawnScript] | LOG: 13
 29:8:2023 | 15:36:17 @ >> [PawnScript] | LOG: Stack Works!
 29:8:2023 | 15:38:30 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 29:8:2023 | 15:38:31 @ >> [PawnScript] | LOG: OMG actually works
 29:8:2023 | 15:38:31 @ >> [PawnScript] | LOG: ==========================================
 29:8:2023 | 15:38:32 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 15:38:32 @ >> [PawnScript] | LOG: 'c'
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1==1: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1!=1: 0
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1>=1: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1<=2: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1<2: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1>2: 0
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:38:33 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:38:34 @ >> [PawnScript] | LOG: 13
 29:8:2023 | 15:38:35 @ >> [PawnScript] | LOG: Stack Works!
 29:8:2023 | 15:38:40 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:41 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:41 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:41 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:41 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:42 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:42 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:42 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:42 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:42 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:43 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:8:2023 | 15:38:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:44 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:38:44 @ >> [PawnScript] | LOG: Tasks are working ig
 29:8:2023 | 15:38:49 @ >> [PawnScript] | LOG: 100
 29:8:2023 | 15:38:49 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: 2
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: 3
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: enum test included
 29:8:2023 | 15:38:50 @ >> [PawnScript] | LOG: 5
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: 5
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: -1
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: Static works here
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: Static works here
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:8:2023 | 15:38:51 @ >> [PawnScript] | LOG: Imported 364
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: Imported true
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: Imported Hello World
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: Imported 0.363999
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: Imported 'D'
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: 827346
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: 364.234008
 29:8:2023 | 15:38:52 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: 9376216
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: 314.159271
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: 100000
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: 21.763599
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 29:8:2023 | 15:38:53 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: 23746
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: true
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: #emit works!
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: 23.746000
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: 'K'
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: 'Z'
 29:8:2023 | 15:38:54 @ >> [PawnScript] | LOG: 364
 29:8:2023 | 15:38:55 @ >> [PawnScript] | LOG: No way this worked!
 29:8:2023 | 15:38:55 @ >> [PawnScript] | LOG: This has also worked...
 29:8:2023 | 15:38:56 @ >> [PawnScript] | LOG: Oh yeah!
 29:8:2023 | 15:38:56 @ >> [PawnScript] | LOG: So yeah!
 29:8:2023 | 15:38:56 @ >> [PawnScript] | LOG: You should always return a value!
 29:8:2023 | 15:38:56 @ >> [PawnScript] | LOG: This was again expected!
 29:8:2023 | 15:38:56 @ >> [PawnScript] | LOG: My namespace function works!
 29:8:2023 | 15:38:57 @ >> [PawnScript] | LOG: Hello World!
 29:8:2023 | 15:38:57 @ >> [PawnScript] | LOG: Try works!
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: Hello World again
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: 'j'
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: Lmao
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: 23
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: 23243
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: true
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: std::string works
 29:8:2023 | 15:39:2 @ >> [PawnScript] | LOG: 23.243000
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: 4323.243164
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: 's'
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: 74
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: 4308.519042
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: LMAO
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: This actually works!
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector.ps loaded
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector test #1 1
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector test #1 312
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector test #1 2
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector test #2 1
 29:8:2023 | 15:39:3 @ >> [PawnScript] | LOG: vector test #2 2
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: vector test #3 24
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: vector test #3 31
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: vector test #3 29
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: vector test #4 31
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: vector test #4 29
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: 11
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: temporaryvar is 300
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: temporaryvar is null
 29:8:2023 | 15:39:4 @ >> [PawnScript] | LOG: Test?
 29:8:2023 | 15:39:5 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:39:6 @ >> [PawnScript] | LOG: Hi
 29:8:2023 | 15:39:6 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:39:7 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:39:8 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:39:9 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:39:10 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:50:44 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 29:8:2023 | 15:50:45 @ >> [PawnScript] | LOG: OMG actually works
 29:8:2023 | 15:50:45 @ >> [PawnScript] | LOG: ==========================================
 29:8:2023 | 15:50:46 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 15:50:46 @ >> [PawnScript] | LOG: 'c'
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1==1: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1!=1: 0
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1>=1: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1<=2: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1<2: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1>2: 0
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:50:47 @ >> [PawnScript] | LOG: 13
 29:8:2023 | 15:50:49 @ >> [PawnScript] | LOG: Stack Works!
 29:8:2023 | 15:50:54 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:55 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:55 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:55 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:55 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:55 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:56 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:56 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:56 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:56 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 29:8:2023 | 15:50:56 @ >> [PawnScript] | LOG: This is still runnin right? 11
 29:8:2023 | 15:50:57 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:57 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:57 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:57 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:57 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 29:8:2023 | 15:50:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:58 @ >> [PawnScript] | LOG: The inline finally works!
 29:8:2023 | 15:50:58 @ >> [PawnScript] | LOG: Tasks are working ig
 29:8:2023 | 15:51:3 @ >> [PawnScript] | LOG: 100
 29:8:2023 | 15:51:3 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: Printed: Method test #2
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 1
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 2
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 3
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: enum test included
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 5
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: 5
 29:8:2023 | 15:51:4 @ >> [PawnScript] | LOG: -1
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: Static works here
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: Static works here
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 29:8:2023 | 15:51:5 @ >> [PawnScript] | LOG: Imported 364
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: Imported true
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: Imported Hello World
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: Imported 0.363999
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: Imported 'D'
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: 827346
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: 364.234008
 29:8:2023 | 15:51:6 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: 9376216
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: 314.159271
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: 100000
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: 21.763599
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 29:8:2023 | 15:51:7 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: 23746
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: true
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: #emit works!
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: 23.746000
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: 'K'
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: 'Z'
 29:8:2023 | 15:51:8 @ >> [PawnScript] | LOG: 364
 29:8:2023 | 15:51:9 @ >> [PawnScript] | LOG: No way this worked!
 29:8:2023 | 15:51:9 @ >> [PawnScript] | LOG: This has also worked...
 29:8:2023 | 15:51:10 @ >> [PawnScript] | LOG: Oh yeah!
 29:8:2023 | 15:51:10 @ >> [PawnScript] | LOG: So yeah!
 29:8:2023 | 15:51:10 @ >> [PawnScript] | LOG: You should always return a value!
 29:8:2023 | 15:51:10 @ >> [PawnScript] | LOG: This was again expected!
 29:8:2023 | 15:51:10 @ >> [PawnScript] | LOG: My namespace function works!
 29:8:2023 | 15:51:11 @ >> [PawnScript] | LOG: Hello World!
 29:8:2023 | 15:51:11 @ >> [PawnScript] | LOG: Try works!
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: Hello World again
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: 'j'
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: Hey
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: Lmao
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: 23
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: 0
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: 23243
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: true
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: std::string works
 29:8:2023 | 15:51:16 @ >> [PawnScript] | LOG: 23.243000
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: 4323.243164
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: 's'
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: 74
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: 4308.519042
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: LMAO
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: This actually works!
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector.ps loaded
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector test #1 1
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector test #1 312
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector test #1 2
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector test #2 1
 29:8:2023 | 15:51:17 @ >> [PawnScript] | LOG: vector test #2 2
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: vector test #3 24
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: vector test #3 31
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: vector test #3 29
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: vector test #4 31
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: vector test #4 29
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: 11
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: temporaryvar is 300
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: temporaryvar is null
 29:8:2023 | 15:51:18 @ >> [PawnScript] | LOG: Test?
 29:8:2023 | 15:51:19 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:51:20 @ >> [PawnScript] | LOG: Hi
 29:8:2023 | 15:51:20 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:51:21 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:51:22 @ >> [PawnScript] | LOG: 4
 29:8:2023 | 15:51:23 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:10:38 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 30:8:2023 | 15:10:39 @ >> [PawnScript] | LOG: OMG actually works
 30:8:2023 | 15:10:39 @ >> [PawnScript] | LOG: ==========================================
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 'c'
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1==1: 1
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1!=1: 0
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1>=1: 1
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1<=2: 1
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1<2: 1
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1>2: 0
 30:8:2023 | 15:10:40 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:10:41 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:10:41 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:10:41 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:10:41 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:10:41 @ >> [PawnScript] | LOG: 13
 30:8:2023 | 15:10:43 @ >> [PawnScript] | LOG: Stack Works!
 30:8:2023 | 15:10:48 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:48 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:48 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:48 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:49 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:49 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:49 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:49 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:50 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:50 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:10:50 @ >> [PawnScript] | LOG: This is still runnin right? 11
 30:8:2023 | 15:10:50 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:50 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:51 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:10:52 @ >> [PawnScript] | LOG: Tasks are working ig
 30:8:2023 | 15:10:56 @ >> [PawnScript] | LOG: 100
 30:8:2023 | 15:10:57 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 30:8:2023 | 15:10:57 @ >> [PawnScript] | LOG: Printed: Method test #2
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 2
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 3
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: enum test included
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: -1
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:10:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: Imported 364
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: Imported true
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: Imported Hello World
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: Imported 0.363999
 30:8:2023 | 15:10:59 @ >> [PawnScript] | LOG: Imported 'D'
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 827346
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 364.234008
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 9376216
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 314.159271
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 100000
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: 21.763599
 30:8:2023 | 15:11:0 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: 23746
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: #emit works!
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: 23.746000
 30:8:2023 | 15:11:1 @ >> [PawnScript] | LOG: 'K'
 30:8:2023 | 15:11:2 @ >> [PawnScript] | LOG: 'Z'
 30:8:2023 | 15:11:2 @ >> [PawnScript] | LOG: 364
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: No way this worked!
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: This has also worked...
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: Oh yeah!
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: So yeah!
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: You should always return a value!
 30:8:2023 | 15:11:3 @ >> [PawnScript] | LOG: This was again expected!
 30:8:2023 | 15:11:4 @ >> [PawnScript] | LOG: My namespace function works!
 30:8:2023 | 15:11:4 @ >> [PawnScript] | LOG: Hello World!
 30:8:2023 | 15:11:4 @ >> [PawnScript] | LOG: Try works!
 30:8:2023 | 15:11:9 @ >> [PawnScript] | LOG: Hello World again
 30:8:2023 | 15:11:9 @ >> [PawnScript] | LOG: 'j'
 30:8:2023 | 15:11:9 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:11:9 @ >> [PawnScript] | LOG: Lmao
 30:8:2023 | 15:11:9 @ >> [PawnScript] | LOG: 23
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 23243
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: std::string works
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 23.243000
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 4323.243164
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 's'
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 74
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: 4308.519042
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: LMAO
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: This actually works!
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: vector.ps loaded
 30:8:2023 | 15:11:10 @ >> [PawnScript] | LOG: vector test #1 1
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #1 312
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #1 2
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #2 1
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #2 2
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #3 24
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #3 31
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #3 29
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #4 31
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: vector test #4 29
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: 11
 30:8:2023 | 15:11:11 @ >> [PawnScript] | LOG: temporaryvar is 300
 30:8:2023 | 15:11:12 @ >> [PawnScript] | LOG: temporaryvar is null
 30:8:2023 | 15:11:12 @ >> [PawnScript] | LOG: Test?
 30:8:2023 | 15:11:13 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:13 @ >> [PawnScript] | LOG: Hi
 30:8:2023 | 15:11:14 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:15 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:16 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:17 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:18 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:19 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:20 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:21 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:22 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 30:8:2023 | 15:11:22 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:23 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:24 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:25 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:26 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:27 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:28 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:11:29 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:13:46 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 30:8:2023 | 15:13:47 @ >> [PawnScript] | LOG: OMG actually works
 30:8:2023 | 15:13:47 @ >> [PawnScript] | LOG: ==========================================
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: 'c'
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: 1==1: 1
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: 1!=1: 0
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: 1>=1: 1
 30:8:2023 | 15:13:48 @ >> [PawnScript] | LOG: 1<=2: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1<2: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1>2: 0
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:13:49 @ >> [PawnScript] | LOG: 13
 30:8:2023 | 15:13:51 @ >> [PawnScript] | LOG: Stack Works!
 30:8:2023 | 15:13:56 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:56 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:56 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:57 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:57 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:57 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:57 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:57 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:58 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:58 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:13:58 @ >> [PawnScript] | LOG: This is still runnin right? 11
 30:8:2023 | 15:13:58 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:13:59 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:14:0 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:14:0 @ >> [PawnScript] | LOG: Tasks are working ig
 30:8:2023 | 15:14:4 @ >> [PawnScript] | LOG: 100
 30:8:2023 | 15:14:5 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 30:8:2023 | 15:14:5 @ >> [PawnScript] | LOG: Printed: Method test #2
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 2
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 3
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: enum test included
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: -1
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 30:8:2023 | 15:14:6 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: Imported 364
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: Imported true
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: Imported Hello World
 30:8:2023 | 15:14:7 @ >> [PawnScript] | LOG: Imported 0.363999
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: Imported 'D'
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 827346
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 364.234008
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 9376216
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 314.159271
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 100000
 30:8:2023 | 15:14:8 @ >> [PawnScript] | LOG: 21.763599
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: 23746
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: #emit works!
 30:8:2023 | 15:14:9 @ >> [PawnScript] | LOG: 23.746000
 30:8:2023 | 15:14:10 @ >> [PawnScript] | LOG: 'K'
 30:8:2023 | 15:14:10 @ >> [PawnScript] | LOG: 'Z'
 30:8:2023 | 15:14:10 @ >> [PawnScript] | LOG: 364
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: No way this worked!
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: This has also worked...
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: Oh yeah!
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: So yeah!
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: You should always return a value!
 30:8:2023 | 15:14:11 @ >> [PawnScript] | LOG: This was again expected!
 30:8:2023 | 15:14:12 @ >> [PawnScript] | LOG: My namespace function works!
 30:8:2023 | 15:14:12 @ >> [PawnScript] | LOG: Hello World!
 30:8:2023 | 15:14:12 @ >> [PawnScript] | LOG: Try works!
 30:8:2023 | 15:14:17 @ >> [PawnScript] | LOG: Hello World again
 30:8:2023 | 15:14:17 @ >> [PawnScript] | LOG: 'j'
 30:8:2023 | 15:14:17 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:14:17 @ >> [PawnScript] | LOG: Lmao
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 23
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 23243
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: std::string works
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 23.243000
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 4323.243164
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 's'
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 74
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: 4308.519042
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: LMAO
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: This actually works!
 30:8:2023 | 15:14:18 @ >> [PawnScript] | LOG: vector.ps loaded
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #1 1
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #1 312
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #1 2
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #2 1
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #2 2
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #3 24
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #3 31
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #3 29
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #4 31
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: vector test #4 29
 30:8:2023 | 15:14:19 @ >> [PawnScript] | LOG: 11
 30:8:2023 | 15:14:20 @ >> [PawnScript] | LOG: temporaryvar is 300
 30:8:2023 | 15:14:20 @ >> [PawnScript] | LOG: temporaryvar is null
 30:8:2023 | 15:14:20 @ >> [PawnScript] | LOG: Test?
 30:8:2023 | 15:14:21 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:21 @ >> [PawnScript] | LOG: Hi
 30:8:2023 | 15:14:22 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:23 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:24 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:25 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:26 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:27 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:28 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:14:29 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:16:27 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 30:8:2023 | 15:16:27 @ >> [PawnScript] | LOG: OMG actually works
 30:8:2023 | 15:16:28 @ >> [PawnScript] | LOG: ==========================================
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 'c'
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1==1: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1!=1: 0
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1>=1: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1<=2: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1<2: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1>2: 0
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:16:29 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:16:30 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:16:30 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:16:30 @ >> [PawnScript] | LOG: 13
 30:8:2023 | 15:16:30 @ >> [PawnScript] | LOG: data.ps still works?
 30:8:2023 | 15:16:32 @ >> [PawnScript] | LOG: Stack Works!
 30:8:2023 | 15:16:37 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:37 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:37 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:37 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:38 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:38 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:38 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:38 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:39 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:39 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 30:8:2023 | 15:16:39 @ >> [PawnScript] | LOG: This is still runnin right? 11
 30:8:2023 | 15:16:39 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:39 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:40 @ >> [PawnScript] | LOG: The inline finally works!
 30:8:2023 | 15:16:41 @ >> [PawnScript] | LOG: Tasks are working ig
 30:8:2023 | 15:16:45 @ >> [PawnScript] | LOG: 100
 30:8:2023 | 15:16:46 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 30:8:2023 | 15:16:46 @ >> [PawnScript] | LOG: Printed: Method test #2
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 1
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 2
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 3
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: enum test included
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 5
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: -1
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: Static works here
 30:8:2023 | 15:16:47 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: Imported 364
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: Imported true
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: Imported Hello World
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: Imported 0.363999
 30:8:2023 | 15:16:48 @ >> [PawnScript] | LOG: Imported 'D'
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 827346
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 364.234008
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 9376216
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 314.159271
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 100000
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: 21.763599
 30:8:2023 | 15:16:49 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: 23746
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: #emit works!
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: 23.746000
 30:8:2023 | 15:16:50 @ >> [PawnScript] | LOG: 'K'
 30:8:2023 | 15:16:51 @ >> [PawnScript] | LOG: 'Z'
 30:8:2023 | 15:16:51 @ >> [PawnScript] | LOG: 364
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: No way this worked!
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: This has also worked...
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: Oh yeah!
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: So yeah!
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: You should always return a value!
 30:8:2023 | 15:16:52 @ >> [PawnScript] | LOG: This was again expected!
 30:8:2023 | 15:16:53 @ >> [PawnScript] | LOG: My namespace function works!
 30:8:2023 | 15:16:53 @ >> [PawnScript] | LOG: Hello World!
 30:8:2023 | 15:16:53 @ >> [PawnScript] | LOG: Try works!
 30:8:2023 | 15:16:58 @ >> [PawnScript] | LOG: Hello World again
 30:8:2023 | 15:16:58 @ >> [PawnScript] | LOG: 'j'
 30:8:2023 | 15:16:58 @ >> [PawnScript] | LOG: Hey
 30:8:2023 | 15:16:58 @ >> [PawnScript] | LOG: Lmao
 30:8:2023 | 15:16:58 @ >> [PawnScript] | LOG: 23
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 0
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 23243
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: true
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: std::string works
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 23.243000
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 4323.243164
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 's'
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 74
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: 4308.519042
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: LMAO
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: This actually works!
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: vector.ps loaded
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: vector test #1 1
 30:8:2023 | 15:16:59 @ >> [PawnScript] | LOG: vector test #1 312
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #1 2
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #2 1
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #2 2
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #3 24
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #3 31
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #3 29
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #4 31
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: vector test #4 29
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: 11
 30:8:2023 | 15:17:0 @ >> [PawnScript] | LOG: temporaryvar is 300
 30:8:2023 | 15:17:1 @ >> [PawnScript] | LOG: temporaryvar is null
 30:8:2023 | 15:17:1 @ >> [PawnScript] | LOG: Test?
 30:8:2023 | 15:17:2 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:2 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:2 @ >> [PawnScript] | LOG: Hi
 30:8:2023 | 15:17:3 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:3 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:4 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:4 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:5 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:5 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:6 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:6 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:7 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:7 @ >> [PawnScript] | LOG: 4
 30:8:2023 | 15:17:8 @ >> [PawnScript] | LOG: 1 is equal to 1
 30:8:2023 | 15:17:8 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:51:36 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 28:10:2023 | 10:51:37 @ >> [PawnScript] | LOG: OMG actually works
 28:10:2023 | 10:51:38 @ >> [PawnScript] | LOG: ==========================================
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: Hey
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 'c'
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1==1: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1!=1: 0
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1>=1: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1<=2: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1<2: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1>2: 0
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1
 28:10:2023 | 10:51:39 @ >> [PawnScript] | LOG: 1
 28:10:2023 | 10:51:40 @ >> [PawnScript] | LOG: 0
 28:10:2023 | 10:51:40 @ >> [PawnScript] | LOG: 1
 28:10:2023 | 10:51:40 @ >> [PawnScript] | LOG: 13
 28:10:2023 | 10:51:40 @ >> [PawnScript] | LOG: data.ps still works?
 28:10:2023 | 10:51:42 @ >> [PawnScript] | LOG: Stack Works!
 28:10:2023 | 10:51:47 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:47 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:48 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:48 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:48 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:48 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:48 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:49 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:49 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:49 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 28:10:2023 | 10:51:49 @ >> [PawnScript] | LOG: This is still runnin right? 11
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:50 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:51 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:51 @ >> [PawnScript] | LOG: The inline finally works!
 28:10:2023 | 10:51:51 @ >> [PawnScript] | LOG: Tasks are working ig
 28:10:2023 | 10:51:55 @ >> [PawnScript] | LOG: 100
 28:10:2023 | 10:51:56 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 28:10:2023 | 10:51:56 @ >> [PawnScript] | LOG: Printed: Method test #2
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 1
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 2
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 3
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: enum test included
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 5
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 5
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: -1
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: 0
 28:10:2023 | 10:51:57 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: Static works here
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: Static works here
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: Imported 364
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: Imported true
 28:10:2023 | 10:51:58 @ >> [PawnScript] | LOG: Imported Hello World
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: Imported 0.363999
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: Imported 'D'
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: 827346
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: 364.234008
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: 9376216
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: 314.159271
 28:10:2023 | 10:51:59 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: 100000
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: 21.763599
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: 23746
 28:10:2023 | 10:52:0 @ >> [PawnScript] | LOG: true
 28:10:2023 | 10:52:1 @ >> [PawnScript] | LOG: #emit works!
 28:10:2023 | 10:52:1 @ >> [PawnScript] | LOG: 23.746000
 28:10:2023 | 10:52:1 @ >> [PawnScript] | LOG: 'K'
 28:10:2023 | 10:52:1 @ >> [PawnScript] | LOG: 'Z'
 28:10:2023 | 10:52:1 @ >> [PawnScript] | LOG: 364
 28:10:2023 | 10:52:2 @ >> [PawnScript] | LOG: No way this worked!
 28:10:2023 | 10:52:2 @ >> [PawnScript] | LOG: This has also worked...
 28:10:2023 | 10:52:2 @ >> [PawnScript] | LOG: Oh yeah!
 28:10:2023 | 10:52:2 @ >> [PawnScript] | LOG: So yeah!
 28:10:2023 | 10:52:3 @ >> [PawnScript] | LOG: You should always return a value!
 28:10:2023 | 10:52:3 @ >> [PawnScript] | LOG: This was again expected!
 28:10:2023 | 10:52:3 @ >> [PawnScript] | LOG: My namespace function works!
 28:10:2023 | 10:52:3 @ >> [PawnScript] | LOG: Hello World!
 28:10:2023 | 10:52:4 @ >> [PawnScript] | LOG: Try works!
 28:10:2023 | 10:52:8 @ >> [PawnScript] | LOG: Hello World again
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 'j'
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: Hey
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: Lmao
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 23
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 0
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 23243
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: true
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: std::string works
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 23.243000
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 4323.243164
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 's'
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: 74
 28:10:2023 | 10:52:9 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: 4308.519042
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: LMAO
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: This actually works!
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector.ps loaded
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #1 1
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #1 312
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #1 2
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #2 1
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #2 2
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #3 24
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #3 31
 28:10:2023 | 10:52:10 @ >> [PawnScript] | LOG: vector test #3 29
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: vector test #4 31
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: vector test #4 29
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: 11
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: temporaryvar is 300
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: temporaryvar is null
 28:10:2023 | 10:52:11 @ >> [PawnScript] | LOG: Test?
 28:10:2023 | 10:52:12 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:12 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:13 @ >> [PawnScript] | LOG: Hi
 28:10:2023 | 10:52:13 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:13 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:14 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:14 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:15 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:15 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:16 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:16 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:17 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:17 @ >> [PawnScript] | LOG: 4
 28:10:2023 | 10:52:18 @ >> [PawnScript] | LOG: 1 is equal to 1
 28:10:2023 | 10:52:18 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:19 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 3:1:2024 | 20:7:20 @ >> [PawnScript] | LOG: OMG actually works
 3:1:2024 | 20:7:20 @ >> [PawnScript] | LOG: ==========================================
 3:1:2024 | 20:7:21 @ >> [PawnScript] | LOG: Hey
 3:1:2024 | 20:7:21 @ >> [PawnScript] | LOG: 'c'
 3:1:2024 | 20:7:21 @ >> [PawnScript] | LOG: 1==1: 1
 3:1:2024 | 20:7:21 @ >> [PawnScript] | LOG: 1!=1: 0
 3:1:2024 | 20:7:21 @ >> [PawnScript] | LOG: 1>=1: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1<=2: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1<2: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1>2: 0
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 0
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:7:22 @ >> [PawnScript] | LOG: 13
 3:1:2024 | 20:7:23 @ >> [PawnScript] | LOG: data.ps still works?
 3:1:2024 | 20:7:24 @ >> [PawnScript] | LOG: Stack Works!
 3:1:2024 | 20:7:30 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:30 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:30 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:30 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:30 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:31 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:31 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:31 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:31 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:31 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: This is still runnin right? 11
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:32 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 3:1:2024 | 20:7:33 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:33 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:33 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:33 @ >> [PawnScript] | LOG: The inline finally works!
 3:1:2024 | 20:7:33 @ >> [PawnScript] | LOG: Tasks are working ig
 3:1:2024 | 20:7:38 @ >> [PawnScript] | LOG: 100
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: Printed: Method test #2
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: 2
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: 3
 3:1:2024 | 20:7:39 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: enum test included
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: 5
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: 5
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: -1
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: 0
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: Static works here
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: Static works here
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 3:1:2024 | 20:7:40 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 3:1:2024 | 20:7:41 @ >> [PawnScript] | LOG: Imported 364
 3:1:2024 | 20:7:41 @ >> [PawnScript] | LOG: Imported true
 3:1:2024 | 20:7:41 @ >> [PawnScript] | LOG: Imported Hello World
 3:1:2024 | 20:7:41 @ >> [PawnScript] | LOG: Imported 0.363999
 3:1:2024 | 20:7:41 @ >> [PawnScript] | LOG: Imported 'D'
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 827346
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 364.234008
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 9376216
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 314.159271
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 100000
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: 21.763599
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 3:1:2024 | 20:7:42 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: 23746
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: true
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: #emit works!
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: 23.746000
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: 'K'
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: 'Z'
 3:1:2024 | 20:7:43 @ >> [PawnScript] | LOG: 364
 3:1:2024 | 20:7:44 @ >> [PawnScript] | LOG: No way this worked!
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: This has also worked...
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: Oh yeah!
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: So yeah!
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: You should always return a value!
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: This was again expected!
 3:1:2024 | 20:7:45 @ >> [PawnScript] | LOG: My namespace function works!
 3:1:2024 | 20:7:46 @ >> [PawnScript] | LOG: Hello World!
 3:1:2024 | 20:7:46 @ >> [PawnScript] | LOG: Try works!
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: Hello World again
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: 'j'
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: Hey
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: Lmao
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: 23
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: 0
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: 23243
 3:1:2024 | 20:7:51 @ >> [PawnScript] | LOG: true
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: std::string works
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: 23.243000
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: 4323.243164
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: 's'
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: 74
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: 4308.519042
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: LMAO
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: This actually works!
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: vector.ps loaded
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: vector test #1 1
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: vector test #1 312
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: vector test #1 2
 3:1:2024 | 20:7:52 @ >> [PawnScript] | LOG: vector test #2 1
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #2 2
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #3 24
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #3 31
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #3 29
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #4 31
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: vector test #4 29
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: 11
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: temporaryvar is 300
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: temporaryvar is null
 3:1:2024 | 20:7:53 @ >> [PawnScript] | LOG: Test?
 3:1:2024 | 20:7:55 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:7:55 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:55 @ >> [PawnScript] | LOG: Hi
 3:1:2024 | 20:7:56 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:7:56 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:57 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:7:57 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:58 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:7:58 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:7:59 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:7:59 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:0 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:0 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:1 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:1 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:2 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:2 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:3 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:3 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:4 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 3:1:2024 | 20:8:4 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:4 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:5 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:5 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:6 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:6 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:8:7 @ >> [PawnScript] | LOG: 1 is equal to 1
 3:1:2024 | 20:8:7 @ >> [PawnScript] | LOG: 4
 3:1:2024 | 20:25:28 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 3:1:2024 | 20:25:29 @ >> [PawnScript] | LOG: OMG actually works
 3:1:2024 | 20:25:29 @ >> [PawnScript] | LOG: ==========================================
 3:1:2024 | 20:25:30 @ >> [PawnScript] | LOG: Hey
 3:1:2024 | 20:25:30 @ >> [PawnScript] | LOG: 'c'
 3:1:2024 | 20:25:30 @ >> [PawnScript] | LOG: 1==1: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1!=1: 0
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1>=1: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1<=2: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1<2: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1>2: 0
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 0
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 1
 3:1:2024 | 20:25:31 @ >> [PawnScript] | LOG: 13
 3:1:2024 | 20:25:32 @ >> [PawnScript] | LOG: data.ps still works?
 3:1:2024 | 20:25:33 @ >> [PawnScript] | LOG: Stack Works!
 4:1:2024 | 13:28:20 @ >> [PawnScript] | LOG: [PawnScript] Standard library loaded.
 4:1:2024 | 13:28:21 @ >> [PawnScript] | LOG: OMG actually works
 4:1:2024 | 13:28:22 @ >> [PawnScript] | LOG: ==========================================
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: Hey
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 'c'
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1==1: 1
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1!=1: 0
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1>=1: 1
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1<=2: 1
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1<2: 1
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1>2: 0
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1
 4:1:2024 | 13:28:23 @ >> [PawnScript] | LOG: 1
 4:1:2024 | 13:28:24 @ >> [PawnScript] | LOG: 1
 4:1:2024 | 13:28:24 @ >> [PawnScript] | LOG: 0
 4:1:2024 | 13:28:24 @ >> [PawnScript] | LOG: 1
 4:1:2024 | 13:28:24 @ >> [PawnScript] | LOG: 13
 4:1:2024 | 13:28:24 @ >> [PawnScript] | LOG: data.ps still works?
 4:1:2024 | 13:28:26 @ >> [PawnScript] | LOG: Stack Works!
 4:1:2024 | 13:28:31 @ >> [PawnScript] | LOG: 2 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:32 @ >> [PawnScript] | LOG: 3 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:32 @ >> [PawnScript] | LOG: 4 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:32 @ >> [PawnScript] | LOG: 5 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:32 @ >> [PawnScript] | LOG: 6 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:32 @ >> [PawnScript] | LOG: 7 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:33 @ >> [PawnScript] | LOG: 8 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:33 @ >> [PawnScript] | LOG: 9 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:33 @ >> [PawnScript] | LOG: 10 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:33 @ >> [PawnScript] | LOG: 11 eeeeeeeeeeeeeeeeee
 4:1:2024 | 13:28:33 @ >> [PawnScript] | LOG: This is still runnin right? 11
 4:1:2024 | 13:28:34 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:34 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:34 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:34 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:34 @ >> [PawnScript] | LOG: LMAO WHAT IS THIS 
 4:1:2024 | 13:28:35 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:35 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:35 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:35 @ >> [PawnScript] | LOG: The inline finally works!
 4:1:2024 | 13:28:35 @ >> [PawnScript] | LOG: Tasks are working ig
 4:1:2024 | 13:28:40 @ >> [PawnScript] | LOG: 100
 4:1:2024 | 13:28:41 @ >> [PawnScript] | LOG: This should be in dpp.log in scriptfiles/
 4:1:2024 | 13:28:41 @ >> [PawnScript] | LOG: Printed: Method test #2
 4:1:2024 | 13:28:41 @ >> [PawnScript] | LOG: 1
 4:1:2024 | 13:28:41 @ >> [PawnScript] | LOG: 2
 4:1:2024 | 13:28:41 @ >> [PawnScript] | LOG: 3
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: enum test included
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: 5
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: 5
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: -1
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: 0
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Tried to print the static var
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: Static works here
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the first time
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static again
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: Static works here
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Printed static var
 4:1:2024 | 13:28:42 @ >> [PawnScript] | LOG: LOCAL DEBUG: Called statictest for the second time
 4:1:2024 | 13:28:43 @ >> [PawnScript] | LOG: Imported 364
 4:1:2024 | 13:28:43 @ >> [PawnScript] | LOG: Imported true
 4:1:2024 | 13:28:43 @ >> [PawnScript] | LOG: Imported Hello World
 4:1:2024 | 13:28:43 @ >> [PawnScript] | LOG: Imported 0.363999
 4:1:2024 | 13:28:43 @ >> [PawnScript] | LOG: Imported 'D'
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 827346
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 364.234008
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: #1 827346 & 364.234008
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 9376216
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 314.159271
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: #2 9376216 & 314.159271
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 100000
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: 21.763599
 4:1:2024 | 13:28:44 @ >> [PawnScript] | LOG: #3 100000 & 21.763599 & false
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: tagtestinteger has the MyNewTag!
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: 23746
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: true
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: #emit works!
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: 23.746000
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: 'K'
 4:1:2024 | 13:28:45 @ >> [PawnScript] | LOG: 'Z'
 4:1:2024 | 13:28:46 @ >> [PawnScript] | LOG: 364
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: No way this worked!
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: This has also worked...
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: Oh yeah!
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: So yeah!
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: You should always return a value!
 4:1:2024 | 13:28:47 @ >> [PawnScript] | LOG: This was again expected!
 4:1:2024 | 13:28:48 @ >> [PawnScript] | LOG: My namespace function works!
 4:1:2024 | 13:28:48 @ >> [PawnScript] | LOG: Hello World!
 4:1:2024 | 13:28:48 @ >> [PawnScript] | LOG: Try works!
 4:1:2024 | 13:28:53 @ >> [PawnScript] | LOG: Hello World again
 4:1:2024 | 13:28:53 @ >> [PawnScript] | LOG: 'j'
 4:1:2024 | 13:28:53 @ >> [PawnScript] | LOG: Hey
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: Lmao
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 23
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 0
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 23243
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: true
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: std::string works
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 23.243000
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 4323.243164
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 's'
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 74
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: mytesttypedefint is 0
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: 4308.519042
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: LMAO
 4:1:2024 | 13:28:54 @ >> [PawnScript] | LOG: This actually works!
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector.ps loaded
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #1 1
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #1 312
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #1 2
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #2 1
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #2 2
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #3 24
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #3 31
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #3 29
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #4 31
 4:1:2024 | 13:28:55 @ >> [PawnScript] | LOG: vector test #4 29
 4:1:2024 | 13:28:56 @ >> [PawnScript] | LOG: 11
 4:1:2024 | 13:28:56 @ >> [PawnScript] | LOG: temporaryvar is 300
 4:1:2024 | 13:28:56 @ >> [PawnScript] | LOG: temporaryvar is null
 4:1:2024 | 13:28:56 @ >> [PawnScript] | LOG: Test?
 4:1:2024 | 13:28:57 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:28:57 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:28:57 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:28:57 @ >> [PawnScript] | LOG: Hi
 4:1:2024 | 13:28:58 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:28:58 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:28:58 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:28:59 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:28:59 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:28:59 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:0 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:0 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:0 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:1 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:1 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:1 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:2 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:2 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:2 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:3 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:3 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:3 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:4 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:4 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:4 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:5 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:5 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:5 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:6 @ >> [PawnScript] | LOG: nonrepeatingtimer works!
 4:1:2024 | 13:29:6 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:6 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:6 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:7 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:7 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:7 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:8 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:8 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:8 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:9 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:9 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:9 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:10 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:10 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:10 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:11 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:11 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:11 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:12 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:12 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:12 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:13 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:13 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:13 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:14 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:14 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:14 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:15 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:15 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:15 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:16 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:16 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:16 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:17 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:17 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:17 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:18 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:18 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:18 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:19 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:19 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:19 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:20 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:20 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:20 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:21 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:21 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:21 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:22 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:22 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:22 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:23 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:23 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:23 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:24 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:24 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:24 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:25 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:25 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:25 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:26 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:26 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:26 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:27 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:27 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:27 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:28 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:28 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:28 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:29 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:29 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:29 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:30 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:30 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:30 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:31 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:31 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:31 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:32 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:32 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:32 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:33 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:33 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:33 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:34 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:34 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:34 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:35 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:35 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:35 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:36 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:36 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:36 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:37 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:37 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:37 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:38 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:38 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:38 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:39 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:39 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:39 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:40 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:40 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:40 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 4:1:2024 | 13:29:41 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:41 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:41 @ >> [PawnScript] | LOG: Process execution speed: 5127 Hz
 4:1:2024 | 13:29:42 @ >> [PawnScript] | LOG: 1 is equal to 1
 4:1:2024 | 13:29:42 @ >> [PawnScript] | LOG: 4
 4:1:2024 | 13:29:42 @ >> [PawnScript] | LOG: Process execution speed: 4103 Hz
 