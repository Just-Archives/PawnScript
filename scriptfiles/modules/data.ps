/*
*
*  	PawnScript
*
* 	Test File
*   Brace Inc.
*
*
*/

console.println("========================== data.dpp ==========================");

console.println.log("data.dpp is imported");

new.str,scanftest1="ok";
new.str,scanftest2="ok";
new.str,scanftest3="ok";
new.str,scanftest4="ok";
new.int,scanftest5=2453;
new.int,scanftest6=2453;

new.str,scanftest="sscanf-is-so-cool-1-2";

data.sscanf(scanftest,scanftest1,scanftest2,scanftest3,scanftest4,scanftest5,scanftest6);

console.println.log(scanftest1);
console.println.log(scanftest2);
console.println.log(scanftest3);
console.println.log(scanftest4);
console.rawout(scanftest5);
console.rawout(scanftest6);

tag TestObj
TestObj<-new.int,testvar=101

namespace ObjectTest
{
	tag TestObj
}

ObjectTest::TestObj<-new.int,testvar=1;



new.int,undeftest=1;

if.equ,defined?undeftest,1->console.println.log("undeftest is defined");

#undef:undeftest;

if.equ,defined?undeftest,1->console.println.log("undeftest is defined *(again!*)");

console.rawout.log(10%3);

console.println.log("Did this work?");

system.rem("Testing doubles");

const[double]pi=3.14159;

console.rawout(pi);

new.double,doubletestvar=723.42;

int DoubleTest(arg) public;
{
	console.println.log("{arg@DoubleTest}");
	return 1
}

user.DoubleTest(doubletestvar);

console.rawout(3.4+3.2);
console.rawout(5+6);
console.rawout(0.4+5);
console.rawout.log(3+1.5);
console.rawout.log(doubletestvar/pi);

if.equ,3.4+3.2,6.6->console.println.log("3.4+3.2 and 6.6 are equal");

const[char]character='a';
new.char,charvar='B';
new.str,charstrtest="Oh my god";

console.println.log("{pi} {doubletestvar} {character} {charvar} {charstrtest}");

double DoubleTestFunction() public;
{
	return 9.87
}

char CharTestFunction() public;
{
	return 'g'
}

console.rawout.log(DoubleTestFunction);
console.rawout.log(CharTestFunction);
/*
typedef,const*new.int,constint;

constint,typedeftest=1234234;
console.println.log("{typedeftest}");

*/