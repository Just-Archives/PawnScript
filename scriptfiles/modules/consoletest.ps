/*
*
*  	PawnScript
*
* 	Test File
*   Brace Inc.
*
*
*/


console.rawout(Hey! I will be printed! /*even this!*/);
console.cout.log('j');
console.println.log("Hey");
new[char]inputtestchar='0';
console.cin(inputtestchar);
console.cout(inputtestchar);
new[str]inputteststr="Test";
console.inputln(inputteststr);
console.println(inputteststr);
//exit;

// inputln and cin functions are broken since getstring and getchar aren't implemented.
console.println.log("Lmao");


// stdlib.ps keywords test
console.println("stdlib TESTS HERE:");

new[std::uint]stduinttest=-23;
console.rawout.log(stduinttest);

new[std::sint]stdsinttest=738436;
console.rawout.log(stdsinttest);


typedef{int}testtypedef
new[testtypedef]mytesttypedefint=74;
console.rawout.log(mytesttypedefint);


data.strdist("hi", "hi") mytesttypedefint;
console.println.log("mytesttypedefint is {mytesttypedefint}");

new[double]floatreturnref=0.0;

math.vectorsize(234.1,4211.3,43.3,-43.33,-0.1,-823.0) floatreturnref;
console.rawout.log(floatreturnref);

#pragma:dynamic,100; // Set the amount of cells used to 100 instead of default 200.

template<console.println.log>cpl;
cpl("LMAO");
std::writeln("This actually works!");
